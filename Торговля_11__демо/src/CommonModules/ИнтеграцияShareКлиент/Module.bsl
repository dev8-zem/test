
#Область ПрограммныйИнтерфейс

// Открывает форму с ссылкой для скачивания публикуемого электронного документа.
// При открытии формы выполняется отправка электронного документа в сервис 1С:Share.
// 
// Параметры:
//  СсылкаНаДокумент - ДокументСсылка - ссылка на формируемый электронный документ для скачивания.
//
Процедура ПоделитьсяДокументом(СсылкаНаДокумент) Экспорт
	
	ОткрытьФормуПоделитьсяДокументом(СсылкаНаДокумент, Неопределено);
	
КонецПроцедуры

#Область ДляВызоваИзДругихПодсистемы

// Выполняется поиск короткой ссылки электронного документа при глобальном поиске.
// 
// Параметры:
//  СтрокаПоиска          - Строка - введенная строка поиска
//  ПланГлобальногоПоиска - ПланГлобальногоПоиска - виды поиска.
//
Процедура ПриГлобальномПоиске(СтрокаПоиска, ПланГлобальногоПоиска) Экспорт
	
	Если Найти(СтрокаПоиска, ДоменСервисаКороткихСсылокShare()) > 0 Тогда
		ПланГлобальногоПоиска.Очистить();
		ПланГлобальногоПоиска.Добавить("ЗаполнитьРезультатГлобальногоПоискаДокумента", "ИнтеграцияShareКлиент", Ложь, Истина);
	КонецЕсли;

КонецПроцедуры

// Выполняется при выборе результата глобального поиска по короткой ссылке электронного документа.
// 
// Параметры:
//  ЭлементРезультата    - ЭлементРезультатаГлобальногоПоиска - выбранная строка результата поиска.
//  СтандартнаяОбработка - Булево - признак обработки по умолчанию.
//
Процедура ПриВыбореРезультатаГлобальногоПоиска(ЭлементРезультата, СтандартнаяОбработка) Экспорт
	
	Если ЭлементРезультата.Описание <> ИмяРезультатаГлобальногоПоискаЗагрузкиДокумента() Тогда
		Возврат;
	КонецЕсли;
	
	ОчиститьСообщения();
	
	СтандартнаяОбработка = Ложь;
	
	ДанныеДокумента = ЭлементРезультата.Значение;
	ИдентификаторДокументаСервиса = ДанныеДокумента.ИдентификаторЭлектронногоДокумента;
	
	УникальныйИдентификатор = Новый УникальныйИдентификатор();
	Оповещение = Новый ОписаниеОповещения("ЗагрузитьЭлектронныйДокументЗавершение", ЭтотОбъект);
	
	ЗагрузитьЭлектронныйДокумент(Неопределено, УникальныйИдентификатор, ИдентификаторДокументаСервиса, Оповещение);
	
	ТекстСообщения = НСтр("ru = 'Загружается документ:'", ОбщегоНазначенияКлиент.КодОсновногоЯзыка());
	ТекстПояснения = СтрШаблон("%1 от %2", ДанныеДокумента.ПредставлениеДокумента, ДанныеДокумента.НаименованиеОрганизации);
	ПоказатьОповещениеПользователя(ТекстСообщения, , ТекстПояснения, БиблиотекаКартинок.ДиалогИнформация);

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Открывает форму "Поделиться документом" для отправки электронного документа
// и формирования короткой ссылки в сервисе 1С:Share. Может вызываться из подключаемых команд.
// 
// Параметры:
//  СсылкаНаДокумент           - ДокументСсылка - ссылка на формируемый электронный документ для скачивания.
//  ПараметрыВыполненияКоманды - Структура - дополнительные параметры команды.
//
Процедура ОткрытьФормуПоделитьсяДокументом(СсылкаНаДокумент, ПараметрыВыполненияКоманды) Экспорт
	
	ОчиститьСообщения();
	Если СсылкаНаДокумент = Неопределено Тогда
		ВызватьИсключение НСтр("ru = 'Команда не может быть выполнена для указанного объекта.'",
			ОбщегоНазначенияКлиент.КодОсновногоЯзыка());
	КонецЕсли;
	
	Отказ = Ложь;
	
	ПараметрыДокумента = ИнтеграцияShareКлиентСервер.НовыеПараметрыЭлектронногоДокумента();
	ПараметрыДокумента.ЭлектронныйДокумент = СсылкаНаДокумент;
	ИнтеграцияShareВызовСервера.ОпубликоватьИПолучитьСсылкуНаСкачиваниеДокумента(ПараметрыДокумента, Отказ);
		
	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	ОткрытьФорму("Обработка.СервисShare.Форма.ПоделитьсяДокументом",
		Новый Структура("ПараметрыДокумента", ПараметрыДокумента), ЭтотОбъект);
	
КонецПроцедуры

// Заполняет результат глобального поиска.
// 
// Параметры:
//  СсылкаДляСкачивания     - Строка - ссылка на скачивание электронного документа. 
//  РезультатыПоиска        - РезультатГлобальногоПоиска - содержит результаты поиска.
//  ДополнительныеПараметры - Структура - дополнительные параметры.
//
Процедура ЗаполнитьРезультатГлобальногоПоискаДокумента(СсылкаДляСкачивания, РезультатыПоиска, ДополнительныеПараметры) Экспорт

	ОчиститьСообщения();
	РезультатыПоиска.Очистить();

	Отказ           = Ложь;
	ДанныеДокумента = Неопределено;
	ИнтеграцияShareВызовСервера.ЗагрузитьДанныеДокументаПоПубличнойСсылке(СсылкаДляСкачивания, ДанныеДокумента, Отказ);

	Если Отказ Или ДанныеДокумента = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если ЗначениеЗаполнено(ДанныеДокумента.ДокументУчета) Тогда
		РезультатыПоиска.Добавить(ДанныеДокумента.ДокументУчета, ДанныеДокумента.ЗаголовокДокумента,
			БиблиотекаКартинок.ЗагрузитьShare);
	Иначе
		РезультатыПоиска.Добавить(ДанныеДокумента, ДанныеДокумента.ЗаголовокДокумента,
			БиблиотекаКартинок.ЗагрузитьShare, , ИмяРезультатаГлобальногоПоискаЗагрузкиДокумента());
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ИмяРезультатаГлобальногоПоискаЗагрузкиДокумента()
	
	Возврат "ДокументДляЗагрузкиИзСервисаShare";
	
КонецФункции

Функция ДоменСервисаКороткихСсылокShare()
	
	Возврат СтрШаблон("%1/m/", ИнтеграцияShareКлиентСервер.АдресСервиса());
	
КонецФункции

// Загружает электронный документ из сервиса 1С:Share в информационную базу
//
// Параметры:
//  ВладелецФормы                 - ФормаКлиентскогоПриложения, Неопределено - владелец открываемой формы,
//                                   которому будет отправлено оповещение о выборе.
//  УникальныйИдентификатор       - УникальныйИдентификатор - уникальный идентификатор.
//  ИдентификаторДокументаСервиса - Строка - идентификатор электронного документа в сервисе.
//  ОписаниеПриЗавершении         - ОписаниеОповещения - оповещение,
//                                   которое необходимо вызвать после завершения метода. 
//
Процедура ЗагрузитьЭлектронныйДокумент(Знач ВладелецФормы, Знач УникальныйИдентификатор,
	Знач ИдентификаторДокументаСервиса, Знач ОписаниеПриЗавершении = Неопределено)
	
	НаименованиеЗадания = НСтр("ru = '1С:Share. Загрузка электронного документа.'",
		ОбщегоНазначенияКлиент.КодОсновногоЯзыка());
	ИмяПроцедуры        = ИнтеграцияShareКлиентСервер.ИмяПроцедурыЗагрузитьЭлектронныйДокумент();

	ДлительнаяОперация = ИнтеграцияShareВызовСервера.ДлительнаяОперацияВФоне(НаименованиеЗадания, ИмяПроцедуры,
		УникальныйИдентификатор, ИдентификаторДокументаСервиса);

	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ВладелецФормы);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.ВыводитьСообщения    = Истина;
		
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОписаниеПриЗавершении, ПараметрыОжидания);

КонецПроцедуры

// Создает электронный документ в информационной базе
//
// Параметры:
//  ВладелецФормы           - ФормаКлиентскогоПриложения, Неопределено - владелец открываемой формы,
//                            которому будет отправлено оповещение о выборе.
//  УникальныйИдентификатор - УникальныйИдентификатор - уникальный идентификатор.
//  ДанныеДокумента         - Структура - содержит данные электронного документа
//                                        см. ИнтеграцияShare.НовоеОписаниеЭлектронногоДокументаДляЗагрузки()
//  ОписаниеПриЗавершении   - ОписаниеОповещения - оповещение,
//                            которое необходимо вызвать после завершения метода. 
//
Процедура СоздатьВУчетеЭлектронныйДокумент(Знач ВладелецФормы, Знач УникальныйИдентификатор,
	Знач ДанныеДокумента, Знач ОписаниеПриЗавершении = Неопределено)
	
	НаименованиеЗадания = НСтр("ru = '1С:Share. Создание учетного документа.'",
		ОбщегоНазначенияКлиент.КодОсновногоЯзыка());
	ИмяПроцедуры = ИнтеграцияShareКлиентСервер.ИмяПроцедурыСоздатьВУчетеЭлектронныйДокумент();

	ДлительнаяОперация = ИнтеграцияShareВызовСервера.ДлительнаяОперацияВФоне(НаименованиеЗадания, ИмяПроцедуры,
		УникальныйИдентификатор, ДанныеДокумента);

	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ВладелецФормы);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.ВыводитьСообщения    = Истина;
		
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОписаниеПриЗавершении, ПараметрыОжидания);

КонецПроцедуры

Процедура ЗагрузитьЭлектронныйДокументЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Или ТипЗнч(Результат) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Свойство("Статус") И Результат.Статус = "Ошибка" Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(Результат.КраткоеПредставлениеОшибки);
		Возврат;
	КонецЕсли;
	
	Если Результат.Сообщения <> Неопределено Тогда
		Для Каждого Сообщение Из Результат.Сообщения Цикл
			Сообщение.Сообщить();
		КонецЦикла;
	КонецЕсли;
	
	ДанныеРезультата = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);

	Если ДанныеРезультата = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДанныеРезультата.ТребуетсяСопоставлениеНоменклатуры Тогда
		
		ДанныеРезультата.ТребуетсяСопоставлениеНоменклатуры = Ложь;
		Настройки  = Новый Структура("РежимОткрытияОкна", РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		Оповещение = Новый ОписаниеОповещения("ЗагрузитьЭлектронныйДокументПослеСопоставления",
			ЭтотОбъект, ДанныеРезультата);
		
		СопоставлениеНоменклатурыКонтрагентовКлиент.ОткрытьСопоставлениеНоменклатуры(
			ДанныеРезультата.НоменклатураСопоставления, Настройки, Оповещение);
		
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеРезультата.ДокументУчета) Тогда
		ПоказатьЗначение(Неопределено, ДанныеРезультата.ДокументУчета);
		Возврат;
	КонецЕсли;
	
	УникальныйИдентификатор = Новый УникальныйИдентификатор();
	СоздатьВУчетеЭлектронныйДокумент(Неопределено, УникальныйИдентификатор, ДанныеРезультата, Оповещение)
	
КонецПроцедуры

Процедура ЗагрузитьЭлектронныйДокументПослеСопоставления(СопоставлениеНоменклатуры, ДополнительныеПараметры) Экспорт
	
	Если СопоставлениеНоменклатуры = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ЗагрузитьЭлектронныйДокументЗавершение", ЭтотОбъект);
	
	УникальныйИдентификатор = Новый УникальныйИдентификатор();
	СоздатьВУчетеЭлектронныйДокумент(Неопределено, УникальныйИдентификатор, ДополнительныеПараметры, Оповещение);
	
КонецПроцедуры

#КонецОбласти
