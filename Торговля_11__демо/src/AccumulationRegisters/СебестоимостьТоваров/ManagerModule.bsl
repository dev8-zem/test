#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Собирает структуру из текстов запросов для дальнейшей проверки даты запрета.
// 
// Параметры:
// 	Запрос - Запрос - Запрос по проверке даты запрета, можно установить параметры
// Возвращаемое значение:
// 	Структура - см. ЗакрытиеМесяцаСервер.ИнициализироватьСтруктуруТекстовЗапросов
Функция ТекстЗапросаКонтрольДатыЗапрета(Запрос) Экспорт
	ИмяРегистра = Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя;
	ИмяТаблицыИзменений = "ТаблицаИзмененийСебестоимостьТоваров"; 
	СтруктураТекстовЗапросов = ПроведениеДокументов.ШаблонТекстЗапросаКонтрольДатыЗапрета(Запрос, 
		ИмяРегистра, 
		ИмяТаблицыИзменений, 
		"ФинансовыйКонтур");
	Возврат СтруктураТекстовЗапросов

КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом


#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область СохранениеДвижений

// Добавляет в дополнительные свойства документа служебное свойство,
// в котором сохраняются дата начала и окончания периода,
// за который необходимо сохранить движения из ИБ в записываемый набор записей регистра.
//
Процедура ИнициализироватьСохранениеДвиженийДокументаЗаПериод(ДополнительныеСвойстваДокумента,
			НачалоПериода = Неопределено, КонецПериода = Неопределено) Экспорт
	
	ДополнительныеСвойстваДокумента.Вставить("ДополнитьДвижениямиИзИБЗаПериод", Новый Структура);
	
	ДополнительныеСвойстваДокумента.ДополнитьДвижениямиИзИБЗаПериод.Вставить(
		"НачалоПериода",
		?(ЗначениеЗаполнено(НачалоПериода), НачалоПериода, Дата(1,1,1)));
	
	ДополнительныеСвойстваДокумента.ДополнитьДвижениямиИзИБЗаПериод.Вставить(
		"КонецПериода", 
		?(ЗначениеЗаполнено(КонецПериода),  КонецПериода,  ДобавитьМесяц(КонецМесяца(ТекущаяДатаСеанса()), 12*100)));
	
КонецПроцедуры

Процедура ИнициализироватьСохранениеДвиженийНабораЗаписейЗаПериод(Движение, ДополнительныеСвойстваДокумента) Экспорт
	
	Если ДополнительныеСвойстваДокумента.Свойство("ДополнитьДвижениямиИзИБЗаПериод") Тогда
		
		Движение.ДополнительныеСвойства.Вставить(
			"ДополнитьДвижениямиИзИБЗаПериод",
			ДополнительныеСвойстваДокумента.ДополнитьДвижениямиИзИБЗаПериод);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// см. ОбновлениеИнформационнойБазыБСП.ПриДобавленииОбработчиковОбновления
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "РегистрыНакопления.СебестоимостьТоваров.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "11.5.11.19";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("102ff45a-34c9-40b1-8411-3b5ce30c8f98");
	Обработчик.Многопоточный = Истина;
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.СебестоимостьТоваров.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru = 'Заполнение настроек счетов учета в движениях отчетов переработчика.'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.РегистрыНакопления.СебестоимостьТоваров.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.РегистрыНакопления.СебестоимостьТоваров.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Блокируемые = Новый Массив;
	Блокируемые.Добавить(Метаданные.РегистрыНакопления.СебестоимостьТоваров.ПолноеИмя());
	Обработчик.БлокируемыеОбъекты = СтрСоединить(Блокируемые, ",");

КонецПроцедуры

// Параметры:
// 	Параметры - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке
//
Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	МетаданныеОбъекта = Метаданные.РегистрыНакопления.СебестоимостьТоваров;
	ПолноеИмяОбъекта = МетаданныеОбъекта.ПолноеИмя();
	
	СписокДокументов = Новый Массив;
	
	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.ПолныеИменаОбъектов = СтрСоединить(СписокДокументов, ",");
	ПараметрыВыборки.ПолныеИменаРегистров = ПолноеИмяОбъекта;
	ПараметрыВыборки.ПоляУпорядочиванияПриРаботеПользователей.Добавить("Период УБЫВ");
	ПараметрыВыборки.ПоляУпорядочиванияПриОбработкеДанных.Добавить("Период УБЫВ");
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиРегистраторыРегистра();
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоДвижения = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = ПараметрыВыборки.ПолныеИменаРегистров;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СебестоимостьТоваров.Регистратор КАК Регистратор
	|ИЗ
	|	(ВЫБРАТЬ ПЕРВЫЕ 0
	|		СебестоимостьТоваров.Регистратор КАК Регистратор
	|	ИЗ
	|		РегистрНакопления.СебестоимостьТоваров КАК СебестоимостьТоваров
	|	ГДЕ
	|		ЛОЖЬ
	|	) КАК СебестоимостьТоваров
	|";
	
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(
		Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор"), ПолноеИмяОбъекта);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	МетаданныеОбъекта = Метаданные.РегистрыНакопления.СебестоимостьТоваров;
	ПолноеИмяОбъекта = МетаданныеОбъекта.ПолноеИмя();
	
	ОбновляемыеДанные = ОбновлениеИнформационнойБазы.ДанныеДляОбновленияВМногопоточномОбработчике(Параметры);
	Если ОбновляемыеДанные.Количество() = 0 Тогда
		Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
		Возврат;
	КонецЕсли;
	
	#Область ЗапросРегистратора
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	СебестоимостьТоваров.МоментВремени                           КАК МоментВремени,
	|	СебестоимостьТоваров.Активность                              КАК Активность,
	|	СебестоимостьТоваров.ВидДвижения                             КАК ВидДвижения,
	|	СебестоимостьТоваров.НомерСтроки                             КАК НомерСтроки,
	|	СебестоимостьТоваров.Период                                  КАК Период,
	|	СебестоимостьТоваров.Регистратор                             КАК Регистратор,
	|	СебестоимостьТоваров.АналитикаУчетаНоменклатуры              КАК АналитикаУчетаНоменклатуры,
	|	СебестоимостьТоваров.РазделУчета                             КАК РазделУчета,
	|	СебестоимостьТоваров.ВидЗапасов                              КАК ВидЗапасов,
	|	СебестоимостьТоваров.Организация                             КАК Организация,
	|	СебестоимостьТоваров.Партия                                  КАК Партия,
	|	СебестоимостьТоваров.АналитикаУчетаПартий                    КАК АналитикаУчетаПартий,
	|	СебестоимостьТоваров.АналитикаФинансовогоУчета               КАК АналитикаФинансовогоУчета,
	|	СебестоимостьТоваров.ВидДеятельностиНДС                      КАК ВидДеятельностиНДС,
	|	СебестоимостьТоваров.Количество                              КАК Количество,
	|	СебестоимостьТоваров.Стоимость                               КАК Стоимость,
	|	СебестоимостьТоваров.СтоимостьБезНДС                         КАК СтоимостьБезНДС,
	|	СебестоимостьТоваров.СтоимостьЗабалансовая                   КАК СтоимостьЗабалансовая,
	|	СебестоимостьТоваров.ДопРасходы                              КАК ДопРасходы,
	|	СебестоимостьТоваров.ДопРасходыБезНДС                        КАК ДопРасходыБезНДС,
	|	СебестоимостьТоваров.Трудозатраты                            КАК Трудозатраты,
	|	СебестоимостьТоваров.ПостатейныеПостоянныеСНДС               КАК ПостатейныеПостоянныеСНДС,
	|	СебестоимостьТоваров.ПостатейныеПеременныеСНДС               КАК ПостатейныеПеременныеСНДС,
	|	СебестоимостьТоваров.ПостатейныеПостоянныеБезНДС             КАК ПостатейныеПостоянныеБезНДС,
	|	СебестоимостьТоваров.ПостатейныеПеременныеБезНДС             КАК ПостатейныеПеременныеБезНДС,
	|	СебестоимостьТоваров.СтоимостьРегл                           КАК СтоимостьРегл,
	|	СебестоимостьТоваров.СтоимостьЗабалансоваяРегл               КАК СтоимостьЗабалансоваяРегл,
	|	СебестоимостьТоваров.ДопРасходыРегл                          КАК ДопРасходыРегл,
	|	СебестоимостьТоваров.ТрудозатратыРегл                        КАК ТрудозатратыРегл,
	|	СебестоимостьТоваров.ПостатейныеПостоянныеРегл               КАК ПостатейныеПостоянныеРегл,
	|	СебестоимостьТоваров.ПостатейныеПеременныеРегл               КАК ПостатейныеПеременныеРегл,
	|	СебестоимостьТоваров.ПостояннаяРазница                       КАК ПостояннаяРазница,
	|	СебестоимостьТоваров.ВременнаяРазница                        КАК ВременнаяРазница,
	|	СебестоимостьТоваров.СтоимостьУпр                            КАК СтоимостьУпр,
	|	СебестоимостьТоваров.ДопРасходыУпр                           КАК ДопРасходыУпр,
	|	СебестоимостьТоваров.ТрудозатратыУпр                         КАК ТрудозатратыУпр,
	|	СебестоимостьТоваров.ПостатейныеПостоянныеУпр                КАК ПостатейныеПостоянныеУпр,
	|	СебестоимостьТоваров.ПостатейныеПеременныеУпр                КАК ПостатейныеПеременныеУпр,
	|	СебестоимостьТоваров.РезервПодОбесценениеРегл                КАК РезервПодОбесценениеРегл,
	|	СебестоимостьТоваров.РезервПодОбесценениеУпр                 КАК РезервПодОбесценениеУпр,
	|	СебестоимостьТоваров.ХозяйственнаяОперация                   КАК ХозяйственнаяОперация,
	|	СебестоимостьТоваров.КорАналитикаУчетаНоменклатуры           КАК КорАналитикаУчетаНоменклатуры,
	|	СебестоимостьТоваров.КорРазделУчета                          КАК КорРазделУчета,
	|	СебестоимостьТоваров.КорВидЗапасов                           КАК КорВидЗапасов,
	|	СебестоимостьТоваров.КорОрганизация                          КАК КорОрганизация,
	|	СебестоимостьТоваров.КорСтоимость                            КАК КорСтоимость,
	|	СебестоимостьТоваров.АналитикаУчетаПоПартнерам               КАК АналитикаУчетаПоПартнерам,
	|	СебестоимостьТоваров.ЗаказКлиента                            КАК ЗаказКлиента,
	|	СебестоимостьТоваров.Подразделение                           КАК Подразделение,
	|	СебестоимостьТоваров.АналитикаРасходов                       КАК АналитикаРасходов,
	|	СебестоимостьТоваров.СтатьяРасходовСписания                  КАК СтатьяРасходовСписания,
	|	СебестоимостьТоваров.СтатьяДоходов                           КАК СтатьяДоходов,
	|	СебестоимостьТоваров.АналитикаДоходов                        КАК АналитикаДоходов,
	|	СебестоимостьТоваров.ПериодПродажи                           КАК ПериодПродажи,
	|	СебестоимостьТоваров.СтатьяАктивовПассивов                   КАК СтатьяАктивовПассивов,
	|	СебестоимостьТоваров.АналитикаАктивовПассивов                КАК АналитикаАктивовПассивов,
	|	СебестоимостьТоваров.ДокументДвижения                        КАК ДокументДвижения,
	|	СебестоимостьТоваров.ИдентификаторСтроки                     КАК ИдентификаторСтроки,
	|	СебестоимостьТоваров.ГруппаПродукции                         КАК ГруппаПродукции,
	|	СебестоимостьТоваров.РасчетПартий                            КАК РасчетПартий,
	|	СебестоимостьТоваров.РасчетСебестоимости                     КАК РасчетСебестоимости,
	|	СебестоимостьТоваров.КорПартия                               КАК КорПартия,
	|	СебестоимостьТоваров.КорАналитикаУчетаПартий                 КАК КорАналитикаУчетаПартий,
	|	СебестоимостьТоваров.КорАналитикаФинансовогоУчета            КАК КорАналитикаФинансовогоУчета,
	|	СебестоимостьТоваров.КорВидДеятельностиНДС                   КАК КорВидДеятельностиНДС,
	|	СебестоимостьТоваров.ВидДеятельностиНДСОтгрузки              КАК ВидДеятельностиНДСОтгрузки,
	|	СебестоимостьТоваров.НДСРегл                                 КАК НДСРегл,
	|	СебестоимостьТоваров.СтатьяКалькуляции                       КАК СтатьяКалькуляции,
	|	СебестоимостьТоваров.ТипЗаписи                               КАК ТипЗаписи,
	|	СебестоимостьТоваров.ДокументИсточник                        КАК ДокументИсточник,
	|	СебестоимостьТоваров.УдалитьАналитикаУчетаПартийПроизводства КАК УдалитьАналитикаУчетаПартийПроизводства,
	|	СебестоимостьТоваров.НДСУпр                                  КАК НДСУпр,
	|	СебестоимостьТоваров.КодСтроки                               КАК КодСтроки,
	|	СебестоимостьТоваров.КорНаправлениеДеятельности              КАК КорНаправлениеДеятельности,
	|	СебестоимостьТоваров.РасчетНеЗавершен                        КАК РасчетНеЗавершен,
	|	СебестоимостьТоваров.НастройкаХозяйственнойОперации          КАК НастройкаХозяйственнойОперации,
	|	СебестоимостьТоваров.ВидДеятельностиНДСДокумента             КАК ВидДеятельностиНДСДокумента,
	|	СебестоимостьТоваров.АналитикаФинансовогоУчетаДокумента      КАК АналитикаФинансовогоУчетаДокумента,
	|	СебестоимостьТоваров.АналитикаУчетаПартийДокумента           КАК АналитикаУчетаПартийДокумента,
	|	СебестоимостьТоваров.ОперацияУчетаСебестоимости              КАК ОперацияУчетаСебестоимости,
	|	СебестоимостьТоваров.ИдентификаторФинЗаписи                  КАК ИдентификаторФинЗаписи,
	|	СебестоимостьТоваров.Сторно                                  КАК Сторно,
	|	СебестоимостьТоваров.ДокументРасчета                         КАК ДокументРасчета,
	|	ВЫБОР
	|		КОГДА ИСТИНА
	|			ТОГДА СебестоимостьТоваров.НастройкаСчетовУчета
	|	КОНЕЦ                                                        КАК НастройкаСчетовУчета,
	|	СебестоимостьТоваров.ВыполненРасчетПартий                    КАК ВыполненРасчетПартий,
	|	СебестоимостьТоваров.РежимЗакрытияМесяца                     КАК РежимЗакрытияМесяца
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК СебестоимостьТоваров
	|
	|ГДЕ
	|	СебестоимостьТоваров.Регистратор = &Регистратор
	|";
	
	#КонецОбласти
	
	Для Каждого ТекущиеДанные Из ОбновляемыеДанные Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.СебестоимостьТоваров.НаборЗаписей");
			ЭлементБлокировки.УстановитьЗначение("Регистратор", ТекущиеДанные.Регистратор);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Блокировка.Заблокировать();
			
			НаборЗаписей = СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(ТекущиеДанные.Регистратор);
			
			Запрос.УстановитьПараметр("Регистратор", ТекущиеДанные.Регистратор);
			НаборЗаписей.Загрузить(Запрос.Выполнить().Выгрузить());
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			ОтменитьТранзакцию();
			ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(ИнформацияОбОшибке(), ТекущиеДанные.Регистратор);
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
