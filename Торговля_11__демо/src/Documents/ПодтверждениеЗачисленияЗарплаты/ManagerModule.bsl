#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// СтандартныеПодсистемы.Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ДляВсехСтрок( ЗначениеРазрешено(Сотрудники.ФизическоеЛицо, NULL КАК ИСТИНА)
	|	) И ЗначениеРазрешено(Организация)";
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

// Возвращает информацию о команде ввода на основании
//
// Параметры:
//  КомандыСозданияНаОсновании - ТаблицаЗначений - Таблица команд
// 
// Возвращаемое значение:
//  СтрокаТаблицыЗначений - содержит информацию о свойствах команды
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт

	Если ПравоДоступа("Добавление", Метаданные.Документы.ПодтверждениеЗачисленияЗарплаты) Тогда
		
		Команда = КомандыСозданияНаОсновании.Добавить();
		Команда.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.ПодтверждениеЗачисленияЗарплаты);
		Команда.Менеджер = Метаданные.Документы.ПодтверждениеЗачисленияЗарплаты.ПолноеИмя();
		Команда.РежимЗаписи = "Проводить";
		
		Возврат Команда;
		
	КонецЕсли;
	
	Возврат Неопределено;

КонецФункции

// Определяет свойства полей формы в зависимости от данных
//
// Параметры:
//	Настройки - ТаблицаЗначений - таблица с колонками:
//		* Поля - Массив - поля, для которых определяются настройки отображения
//		* Условие - ОтборКомпоновкиДанных - условия применения настройки
//		* Свойства - Структура - имена и значения свойств
//
Процедура ЗаполнитьНастройкиПолейФормы(Настройки) Экспорт
	
	// ЗарплатныйПроект
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ЗарплатныйПроект");
	ФинансоваяОтчетностьСервер.НовыйОтбор(Элемент.Условие, "Дополнительно.ИспользоватьНачислениеЗарплаты", Истина);
	ГруппаИЛИ = ФинансоваяОтчетностьСервер.НовыйОтбор(Элемент.Условие, , , Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИЛИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	ФинансоваяОтчетностьСервер.НовыйОтбор(ГруппаИЛИ, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту);
	ГруппаИ = ФинансоваяОтчетностьСервер.НовыйОтбор(ГруппаИЛИ, , , Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	ФинансоваяОтчетностьСервер.НовыйОтбор(ГруппаИ, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику);
	ФинансоваяОтчетностьСервер.НовыйОтбор(ГруппаИ, "ЗарплатныйПроект", , , ВидСравненияКомпоновкиДанных.Заполнено);
	Элемент.Свойства.Вставить("Видимость");
	
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("ЗарплатныйПроект");
	ФинансоваяОтчетностьСервер.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику);
	Элемент.Свойства.Вставить("ОтметкаНезаполненного", Ложь);
	
	// Подразделение
	Элемент = Настройки.Добавить();
	Элемент.Поля.Добавить("Подразделение");
	ФинансоваяОтчетностьСервер.НовыйОтбор(Элемент.Условие, "ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику);
	Элемент.Свойства.Вставить("Видимость", Ложь);
	
КонецПроцедуры

#КонецОбласти

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  Механизмы - Массив - список имен учетных механизмов, для которых будет выполнена
//                       регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(Механизмы) Экспорт

	Механизмы = Новый Массив;
	Механизмы.Добавить("РасчетыСПодотчетниками");
	Механизмы.Добавить("УчетДенежныхСредств");
	Механизмы.Добавить("УчетПрочихАктивовПассивов");
	
	ПодтверждениеЗачисленияЗарплатыЛокализация.ЗарегистрироватьУчетныеМеханизмы(Механизмы);

КонецПроцедуры

// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  ДокументСсылка - ДокументСсылка - ссылка на документ, по которому необходимо получить данные
//  СписокРегистров - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//  - Структура - коллекция элементов - таблиц значений - данных для отражения в регистр.
//  - СписокЗначений из Строка - тексты запросов.
Функция ДанныеДокументаДляПроведения(ДокументСсылка, СписокРегистров, ДопПараметры) Экспорт

	Запрос			= Новый Запрос;
	ТекстыЗапроса	= Новый СписокЗначений;
	
	ДобавитьТекстЗапросаТаблицаДенежныеСредстваВПути(ТекстыЗапроса, СписокРегистров);
	ДобавитьТекстЗапросаТаблицаДенежныеСредстваУПодотчетныхЛиц(ТекстыЗапроса, СписокРегистров);
	
	ПодтверждениеЗачисленияЗарплатыЛокализация.ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, СписокРегистров);
	
	Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(ДокументСсылка.Валюта,
																				ДокументСсылка.Валюта,
																				ДокументСсылка.Дата,
																				ДокументСсылка.Организация);
			
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("Период", ДокументСсылка.Дата);
	Запрос.УстановитьПараметр("Организация", ДокументСсылка.Организация);
	Запрос.УстановитьПараметр("ИдентификаторДокумента", ДокументСсылка.УникальныйИдентификатор());
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуУпр", Коэффициенты.КоэффициентПересчетаВВалютуУпр);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл", Коэффициенты.КоэффициентПересчетаВВалютуРегл);
	
	КонтрольВыдачиПодОтчетВРазрезеЦелей = ПолучитьФункциональнуюОпцию("КонтролироватьВыдачуПодОтчетВРазрезеЦелей");
	Запрос.УстановитьПараметр("КонтролироватьВыдачуПодОтчетВРазрезеЦелей", КонтрольВыдачиПодОтчетВРазрезеЦелей);
	
	
	ТаблицыДляДвижений = ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос,
																		ТекстыЗапроса, ДопПараметры);
	
	Возврат ТаблицыДляДвижений;

КонецФункции


#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

//++ Локализация

// Возвращает описание состава документа
//
// Возвращаемое значение:
//  см. ЗарплатаКадрыСоставДокументов.НовоеОписаниеСоставаОбъекта.
Функция ОписаниеСоставаОбъекта() Экспорт
	
	ОписаниеСостава = Новый Структура;

	
	Возврат ОписаниеСостава;
	
КонецФункции

//-- Локализация

// Создает документ "Зачисление ДС на лицевые счета" и возвращает ссылку на созданный документ.
// 
// Параметры:
//  ДокументОснование - ДокументСсылка.СписаниеБезналичныхДенежныхСредств - документ, на основании которого создается
//                      зачисление
// 
// Возвращаемое значение:
//  ДокументСсылка.ПодтверждениеЗачисленияЗарплаты - документ "Зачисление ДС на лицевые счета".
//
Функция ЗачислениеНаЛицевыеСчета(ДокументОснование) Экспорт
	
	ДокументОбъект = СоздатьДокумент();
	ДокументОбъект.Заполнить(ДокументОснование);
	ДокументОбъект.Дата = ТекущаяДатаСеанса();
	ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	
	Возврат ДокументОбъект.Ссылка;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

Процедура УстановитьВозвратныеВидыВзаиморасчетов(ПараметрыОбновления = Неопределено) Экспорт
	
	//++ Локализация


	//-- Локализация
	Возврат;
	
КонецПроцедуры

//++ Локализация


//-- Локализация

#КонецОбласти

Процедура ДобавитьТекстЗапросаТаблицаДенежныеСредстваВПути(ТекстыЗапроса, Регистры)
	
	ИмяТаблицы = "ДенежныеСредстваВПути";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяТаблицы, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	               |	ДанныеДокумента.Дата КАК Период,
	               |	ДанныеДокумента.Организация КАК Организация,
	               |	НЕОПРЕДЕЛЕНО КАК Получатель,
	               |	СписаниеБезналичныхДенежныхСредств.БанковскийСчет КАК Отправитель,
	               |	ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПеречислениеФизическимЛицам) КАК ВидПереводаДенежныхСредств,
	               |	СписаниеБезналичныхДенежныхСредств.Контрагент КАК Контрагент,
	               |	НЕОПРЕДЕЛЕНО КАК Договор,
	               |	ДанныеДокумента.Валюта КАК Валюта,
	               |	СУММА(ДанныеЗачисления.Сумма) КАК Сумма,
	               |	СУММА(ДанныеЗачисления.Сумма * &КоэффициентПересчетаВВалютуУпр) КАК СуммаУпр,
	               |	СУММА(ДанныеЗачисления.Сумма * &КоэффициентПересчетаВВалютуРегл) КАК СуммаРегл,
	               |	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	               |	ДанныеДокумента.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	               |	&ИдентификаторДокумента КАК ИдентификаторФинЗаписи,
	               |	ЕСТЬNULL(НастройкиХозяйственныхОпераций.Ссылка, ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПустаяСсылка)) КАК НастройкаХозяйственнойОперации
	               |ИЗ
	               |	Документ.ПодтверждениеЗачисленияЗарплаты КАК ДанныеДокумента
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НастройкиХозяйственныхОпераций КАК НастройкиХозяйственныхОпераций
	               |		ПО ДанныеДокумента.ХозяйственнаяОперация = НастройкиХозяйственныхОпераций.ХозяйственнаяОперация
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеБезналичныхДенежныхСредств КАК СписаниеБезналичныхДенежныхСредств
	               |		ПО ДанныеДокумента.ПервичныйДокумент = СписаниеБезналичныхДенежныхСредств.Ссылка
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПодтверждениеЗачисленияЗарплаты.Сотрудники КАК ДанныеЗачисления
	               |		ПО ДанныеДокумента.Ссылка = ДанныеЗачисления.Ссылка
	               |ГДЕ
	               |	ДанныеДокумента.Ссылка = &Ссылка
	               |	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
	               |	И ДанныеЗачисления.РезультатЗачисленияЗарплаты = ЗНАЧЕНИЕ(Перечисление.РезультатыЗачисленияЗарплаты.Зачислено)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ДанныеДокумента.Дата,
	               |	ДанныеДокумента.Организация,
	               |	СписаниеБезналичныхДенежныхСредств.БанковскийСчет,
	               |	СписаниеБезналичныхДенежныхСредств.Контрагент,
	               |	ДанныеДокумента.Валюта,
	               |	ДанныеДокумента.ХозяйственнаяОперация,
	               |	ДанныеДокумента.СтатьяДвиженияДенежныхСредств,
	               |	ЕСТЬNULL(НастройкиХозяйственныхОпераций.Ссылка, ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПустаяСсылка))
	               |
	               |";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаТаблицаДенежныеСредстваУПодотчетныхЛиц(ТекстыЗапроса, Регистры)
	
	ИмяТаблицы = "ДенежныеСредстваУПодотчетныхЛиц";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяТаблицы, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ПодтверждениеЗачисленияЗарплаты.Ссылка КАК Ссылка,
	               |	ПодтверждениеЗачисленияЗарплатыСотрудники.ФизическоеЛицо КАК ПодотчетноеЛицо,
	               |	ПодтверждениеЗачисленияЗарплатыСотрудники.НомерЛицевогоСчета КАК НомерЛицевогоСчета,
	               |	ПодтверждениеЗачисленияЗарплатыСотрудники.РезультатЗачисленияЗарплаты КАК РезультатЗачисленияЗарплаты,
	               |	ПодтверждениеЗачисленияЗарплатыСотрудники.Сумма КАК Сумма,
	               |	ВЫРАЗИТЬ(ПодтверждениеЗачисленияЗарплатыСотрудники.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(31, 2)) КАК СуммаУпр,
	               |	ВЫРАЗИТЬ(ПодтверждениеЗачисленияЗарплатыСотрудники.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31, 2)) КАК СуммаРегл,
	               |	ПодтверждениеЗачисленияЗарплатыСотрудники.КомментарийРезультата КАК КомментарийРезультата,
	               |	ПодтверждениеЗачисленияЗарплаты.Дата КАК Дата,
	               |	ПодтверждениеЗачисленияЗарплаты.Организация КАК Организация,
	               |	СписаниеБезналичныхДенежныхСредств.Подразделение КАК Подразделение,
	               |	ПодтверждениеЗачисленияЗарплаты.Валюта КАК Валюта,
	               |	ПодтверждениеЗачисленияЗарплаты.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	               |	ПодтверждениеЗачисленияЗарплаты.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	               |	ВЫРАЗИТЬ(ПодтверждениеЗачисленияЗарплаты.ПервичныйДокумент КАК Документ.СписаниеБезналичныхДенежныхСредств).ДатаАвансовогоОтчета КАК ДатаАвансовогоОтчета
	               |ПОМЕСТИТЬ ТаблицаЛицевыеСчета
	               |ИЗ
	               |	Документ.ПодтверждениеЗачисленияЗарплаты.Сотрудники КАК ПодтверждениеЗачисленияЗарплатыСотрудники
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПодтверждениеЗачисленияЗарплаты КАК ПодтверждениеЗачисленияЗарплаты
	               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеБезналичныхДенежныхСредств КАК СписаниеБезналичныхДенежныхСредств
	               |			ПО ПодтверждениеЗачисленияЗарплаты.ПервичныйДокумент = СписаниеБезналичныхДенежныхСредств.Ссылка
	               |		ПО ПодтверждениеЗачисленияЗарплатыСотрудники.Ссылка = ПодтверждениеЗачисленияЗарплаты.Ссылка
	               |ГДЕ
	               |	ПодтверждениеЗачисленияЗарплаты.Ссылка = &Ссылка
	               |	И ПодтверждениеЗачисленияЗарплаты.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
	               |	И ПодтверждениеЗачисленияЗарплатыСотрудники.РезультатЗачисленияЗарплаты = ЗНАЧЕНИЕ(Перечисление.РезультатыЗачисленияЗарплаты.Зачислено)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблицаЛицевыеСчета.Дата КАК Период,
	               |	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	               |	ТаблицаЛицевыеСчета.Организация КАК Организация,
	               |	ТаблицаЛицевыеСчета.ПодотчетноеЛицо КАК ПодотчетноеЛицо,
	               |	ТаблицаЛицевыеСчета.Подразделение КАК Подразделение,
	               |	ТаблицаЛицевыеСчета.Валюта КАК Валюта,
	               |	ВЫБОР
	               |		КОГДА &КонтролироватьВыдачуПодОтчетВРазрезеЦелей
	               |			ТОГДА ТаблицаЛицевыеСчета.СтатьяДвиженияДенежныхСредств
	               |	КОНЕЦ КАК ЦельВыдачи,
	               |	ТаблицаЛицевыеСчета.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	               |	ТаблицаЛицевыеСчета.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	               |	ТаблицаЛицевыеСчета.Сумма КАК Сумма,
	               |	ТаблицаЛицевыеСчета.СуммаУпр КАК СуммаУпр,
	               |	ТаблицаЛицевыеСчета.СуммаРегл КАК СуммаРегл,
	               |	0 КАК КОтчету,
	               |	&ИдентификаторДокумента КАК ИдентификаторФинЗаписи,
	               |	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВыдачаДенежныхСредствПодотчетнику) КАК НастройкаХозяйственнойОперации
	               |ИЗ
	               |	ТаблицаЛицевыеСчета КАК ТаблицаЛицевыеСчета
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	КОНЕЦПЕРИОДА(ТаблицаЛицевыеСчета.ДатаАвансовогоОтчета, ДЕНЬ),
	               |	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	               |	ТаблицаЛицевыеСчета.Организация,
	               |	ТаблицаЛицевыеСчета.ПодотчетноеЛицо,
	               |	ТаблицаЛицевыеСчета.Подразделение,
	               |	ТаблицаЛицевыеСчета.Валюта,
	               |	ВЫБОР
	               |		КОГДА &КонтролироватьВыдачуПодОтчетВРазрезеЦелей
	               |			ТОГДА ТаблицаЛицевыеСчета.СтатьяДвиженияДенежныхСредств
	               |	КОНЕЦ,
	               |	ТаблицаЛицевыеСчета.ХозяйственнаяОперация,
	               |	ТаблицаЛицевыеСчета.СтатьяДвиженияДенежныхСредств,
	               |	0,
	               |	0,
	               |	0,
	               |	ТаблицаЛицевыеСчета.Сумма,
	               |	&ИдентификаторДокумента,
	               |	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВыдачаДенежныхСредствПодотчетнику)
	               |ИЗ
	               |	ТаблицаЛицевыеСчета КАК ТаблицаЛицевыеСчета";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);
	
КонецПроцедуры


#КонецОбласти

#КонецЕсли