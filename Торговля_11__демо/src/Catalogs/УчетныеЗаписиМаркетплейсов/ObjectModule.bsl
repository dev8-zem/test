#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

// Процедура - обработчик события ПередЗаписью.
//
Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Если ВидМаркетплейса = Перечисления.ВидыМаркетплейсов.МаркетплейсOzon Тогда
		СтруктураНастроек = Новый Структура;
		СтруктураНастроек.Вставить("Организация", Организация);
		СтруктураНастроек.Вставить("ИдентификаторКлиента", ИдентификаторКлиента);
		СтруктураНастроек.Вставить("ИсточникКатегории", ИсточникКатегории);
		СтруктураНастроек.Вставить("ВалютаУчета", ВалютаУчета);
		СтруктураНастроек.Вставить("ВидыЦен", ВидыЦен.Выгрузить());
		
		ХешНастроек = Справочники.УчетныеЗаписиМаркетплейсов.ПолучитьХешНастроек(СтруктураНастроек);

		ИзменениеПометкиУдаления = 0;
		Если ПометкаУдаления = Истина И Ссылка.ПометкаУдаления = Ложь Тогда // Помечается
			ИзменениеПометкиУдаления = 1;
		ИначеЕсли ПометкаУдаления = Ложь И Ссылка.ПометкаУдаления = Истина Тогда // Снимается
			ИзменениеПометкиУдаления = -1;
		КонецЕсли;
		ДополнительныеСвойства.Вставить("ИзменениеПометкиУдаления", ИзменениеПометкиУдаления);
	КонецЕсли;

КонецПроцедуры

Процедура ПриЗаписи(Отказ)

	Если Отказ Или ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Если ВидМаркетплейса = Перечисления.ВидыМаркетплейсов.МаркетплейсOzon Тогда
		ИзменениеПометкиУдаления = 0;
		ДополнительныеСвойства.Свойство("ИзменениеПометкиУдаления", ИзменениеПометкиУдаления);

		Если ИзменениеПометкиУдаления = 1 Тогда	// Помечается
			Использование = Ложь;
		ИначеЕсли ИзменениеПометкиУдаления = -1 Тогда	// Снимается
			Использование = Истина;
		КонецЕсли;

		УстановитьПривилегированныйРежим(Истина);

		Префиксы = ИнтеграцияСМаркетплейсомOzonКлиентСервер.ПрефиксыСервиса();
		Идентификатор = Ссылка.УникальныйИдентификатор();
		Если ЗначениеЗаполнено(ИзменениеПометкиУдаления) Тогда
			УстановитьИспользованиеРегламентногоЗадания(Префиксы.ОбновлениеТоварногоКаталога, Идентификатор, Использование);
			УстановитьИспользованиеРегламентногоЗадания(Префиксы.ВыгрузкаОстатков, Идентификатор, Использование);
			УстановитьИспользованиеРегламентногоЗадания(Префиксы.ЗагрузкаОстатков, Идентификатор, Использование);
			УстановитьИспользованиеРегламентногоЗадания(Префиксы.ВыгрузкаЦен, Идентификатор, Использование);
			УстановитьИспользованиеРегламентногоЗадания(Префиксы.ЗагрузкаЦен, Идентификатор, Использование);
		КонецЕсли;

		Если ИзменениеПометкиУдаления = -1 Тогда
			УстановитьНаименованиеРегламентногоЗадания(Префиксы.ОбновлениеТоварногоКаталога, Идентификатор);
			УстановитьНаименованиеРегламентногоЗадания(Префиксы.ВыгрузкаОстатков, Идентификатор);
			УстановитьНаименованиеРегламентногоЗадания(Префиксы.ЗагрузкаОстатков, Идентификатор);
			УстановитьНаименованиеРегламентногоЗадания(Префиксы.ВыгрузкаЦен, Идентификатор);
			УстановитьНаименованиеРегламентногоЗадания(Префиксы.ЗагрузкаЦен, Идентификатор);
		КонецЕсли;

		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;

КонецПроцедуры

Процедура ПередУдалением(Отказ)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Если ВидМаркетплейса = ПредопределенноеЗначение("Перечисление.ВидыМаркетплейсов.МаркетплейсOzon") Тогда
		Префиксы = ИнтеграцияСМаркетплейсомOzonКлиентСервер.ПрефиксыСервиса();
		Идентификатор = Ссылка.УникальныйИдентификатор();

		УдалитьРегламентноеЗадание(Префиксы.ВыгрузкаОстатков + Идентификатор);
		УдалитьРегламентноеЗадание(Префиксы.ЗагрузкаОстатков + Идентификатор);
		УдалитьРегламентноеЗадание(Префиксы.ВыгрузкаЦен + Идентификатор);
		УдалитьРегламентноеЗадание(Префиксы.ЗагрузкаЦен + Идентификатор);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УдалитьРегламентноеЗадание(Ключ)

	Отбор = Новый Структура("Ключ", Ключ);
	РезультатПоиска = РегламентныеЗаданияСервер.НайтиЗадания(Отбор);
	Для каждого РегламентноеЗадание Из РезультатПоиска Цикл
		РегламентноеЗадание.Удалить();
	КонецЦикла;

КонецПроцедуры

Процедура УстановитьИспользованиеРегламентногоЗадания(Префикс, Идентификатор, Использование)

	Отбор = Новый Структура("Ключ, Использование", Префикс + Идентификатор, Не Использование);
	РезультатПоиска = РегламентныеЗаданияСервер.НайтиЗадания(Отбор);
	Для каждого РегламентноеЗадание Из РезультатПоиска Цикл
		Параметры = Новый Структура();
		Параметры.Вставить("Использование", Использование);
		РегламентныеЗаданияСервер.ИзменитьЗадание(РегламентноеЗадание, Параметры);
	КонецЦикла;

КонецПроцедуры

Процедура УстановитьНаименованиеРегламентногоЗадания(Префикс, Идентификатор)

	НаименованиеРегЗадания = СтрШаблон("%1 (%2)",
		ИнтеграцияСМаркетплейсомOzonКлиентСервер.НаименованиеРегламентногоЗадания(Префикс),
		Наименование);

	Отбор = Новый Структура("Ключ", Префикс + Идентификатор);
	РезультатПоиска = РегламентныеЗаданияСервер.НайтиЗадания(Отбор);
	Для каждого РегламентноеЗадание Из РезультатПоиска Цикл
		Параметры = Новый Структура();
		Параметры.Вставить("Наименование", НаименованиеРегЗадания);
		РегламентныеЗаданияСервер.ИзменитьЗадание(РегламентноеЗадание, Параметры);
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#КонецЕсли
