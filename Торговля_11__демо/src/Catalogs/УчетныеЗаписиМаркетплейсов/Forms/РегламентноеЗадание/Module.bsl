///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2019, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если НЕ Пользователи.ЭтоПолноправныйПользователь(, Истина) Тогда
		ВызватьИсключение НСтр("ru = 'Недостаточно прав доступа.
		                             |
		                             |Изменение свойств регламентного задания
		                             |выполняется только администраторами.';
		                             |en = 'Insufficient access rights.
		                             |
		                             |Only administrators can change
		                             |scheduled job settings.'");
	КонецЕсли;

	Если Параметры.Свойство("УчетнаяЗапись") = Ложь
		Или Параметры.Свойство("Наименование") = Ложь
		Или Параметры.Свойство("ИмяМетаданных") = Ложь
		Или Параметры.Свойство("Префикс") = Ложь Тогда
		ВызватьИсключение НСтр("ru = 'Отсутствуют обязательные параметры открытия формы ""Регламентное задание"".'");
	КонецЕсли;

	Если Метаданные.РегламентныеЗадания.Найти(Параметры.ИмяМетаданных) = Неопределено Тогда
		ВызватьИсключение НСтр("ru = 'В форму ""Регламентное задание"" передано некорректное имя объекта метаданных.'");
	КонецЕсли;

	УчетнаяЗапись = Параметры.УчетнаяЗапись;
	Наименование = СтрШаблон("%1 (%2)", Параметры.Наименование, УчетнаяЗапись);
	Ключ = Параметры.Префикс + Строка(УчетнаяЗапись.УникальныйИдентификатор());


	Отбор = Новый Структура("Ключ", Ключ);
	Результат = РегламентныеЗаданияСервер.НайтиЗадания(Отбор);
	Если Результат.Количество() = 0 Тогда

		Действие = "Добавить";
		Задание = Метаданные.РегламентныеЗадания[Параметры.ИмяМетаданных];
		Расписание = РегламентныеЗадания.СоздатьРегламентноеЗадание(Задание).Расписание;

		ИмяМетаданных       = Задание.Имя;
		СинонимМетаданных   = Задание.Синоним;
		ИмяМетодаМетаданных = Задание.ИмяМетода;

	Иначе

		Действие = "Изменить";
		Задание = Результат[0];
		ЗаполнитьЗначенияСвойств(
			ЭтотОбъект,
			Задание,
			"Ключ,
			|Предопределенное,
			|Использование,
			|Наименование,
			|ИмяПользователя,
			|ИнтервалПовтораПриАварийномЗавершении,
			|КоличествоПовторовПриАварийномЗавершении");
		
		Идентификатор = Строка(Задание.УникальныйИдентификатор);
		ИмяМетаданных        = Задание.Метаданные.Имя;
		СинонимМетаданных    = Задание.Метаданные.Синоним;
		ИмяМетодаМетаданных  = Задание.Метаданные.ИмяМетода;
		Расписание = Задание.Расписание;

	КонецЕсли;

КонецПроцедуры 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьЗаголовокФормы();

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)

	Оповещение = Новый ОписаниеОповещения("ЗаписатьИЗакрытьЗавершение", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ, ЗавершениеРаботы);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Записать(Команда)

	ЗаписатьРегламентноеЗадание();
	Действие = "Изменить";
	ОбновитьЗаголовокФормы();

КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрытьВыполнить()

	ЗаписатьИЗакрытьЗавершение();

КонецПроцедуры

&НаКлиенте
Процедура НастроитьРасписаниеВыполнить()

	Диалог = Новый ДиалогРасписанияРегламентногоЗадания(Расписание);
	Диалог.Показать(Новый ОписаниеОповещения("ОткрытьРасписаниеЗавершение", ЭтотОбъект));

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗаписатьИЗакрытьЗавершение(Результат = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	ЗаписатьРегламентноеЗадание();
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРасписаниеЗавершение(НовоеРасписание, Контекст) Экспорт

	Если НовоеРасписание <> Неопределено Тогда
		Расписание = НовоеРасписание;
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьРегламентноеЗадание()
	
	Если НЕ ЗначениеЗаполнено(ИмяМетаданных) Тогда
		Возврат;
	КонецЕсли;
	
	ТекущийИдентификатор = ?(Действие = "Изменить", Идентификатор, Неопределено);
	
	ЗаписатьРегламентноеЗаданиеНаСервере();
	ОбновитьЗаголовокФормы();
	
	Оповестить("Запись_РегламентныеЗадания", ТекущийИдентификатор);
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьРегламентноеЗаданиеНаСервере()

	Если Действие = "Изменить" Тогда
		Задание = РегламентныеЗаданияСервер.ПолучитьРегламентноеЗадание(Идентификатор);
	Иначе
		ПараметрыЗадания = Новый Структура();
		ПараметрыЗадания.Вставить("Метаданные", Метаданные.РегламентныеЗадания[ИмяМетаданных]);
		Задание = РегламентныеЗаданияСервер.ДобавитьЗадание(ПараметрыЗадания);

		Идентификатор = Строка(Задание.УникальныйИдентификатор);
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(Задание, ЭтотОбъект,
		"Ключ,
		|Наименование,
		|Использование,
		|ИмяПользователя,
		|ИнтервалПовтораПриАварийномЗавершении,
		|КоличествоПовторовПриАварийномЗавершении");

	Задание.Расписание = Расписание;
	Задание.Параметры.Очистить();
	Задание.Параметры.Добавить(УчетнаяЗапись);
	Задание.Записать();

	Модифицированность = Ложь;

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗаголовокФормы()

	Если НЕ ПустаяСтрока(Наименование) Тогда
		Представление = Наименование;

	ИначеЕсли НЕ ПустаяСтрока(СинонимМетаданных) Тогда
		Представление = СинонимМетаданных;
	Иначе
		Представление = ИмяМетаданных;
	КонецЕсли;

	Если Действие = "Изменить" Тогда
		Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 (Регламентное задание)';
																				|en = '%1 (Scheduled job)'"), Представление);
	Иначе
		Заголовок = НСтр("ru = 'Регламентное задание (создание)';
						|en = 'Scheduled job (Create)'");
	КонецЕсли;

КонецПроцедуры

#КонецОбласти
