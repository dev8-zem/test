#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

//++ Локализация

// Возвращает КБК с учетом вида налогового обязательства
//
// Параметры:
//   ТипНалога                  - ПеречислениеСсылка.ТипыНалогов
//   ВидНалоговогоОбязательства - ПеречислениеСсылка.ВидыПлатежейВГосБюджет
//   Период                     - Дата
//
// Возвращаемое значение:
//   Строка
//
Функция КБКПоВидуНалоговогоОбязательства(ТипНалога, Знач ВидНалоговогоОбязательства = Неопределено, Знач Период = Неопределено) Экспорт
	
	КБК = КБКПоТипуНалога(ТипНалога);
	Если ПустаяСтрока(КБК) Тогда
		Возврат "";
	КонецЕсли;
	
	
	Возврат КБК;
	
КонецФункции

// Возвращает тип налога по КБК, если определить не удалось возвращает ПрочиеНалогиИСборы
//
// Параметры:
//   КодБК - Строка
// 
// Возвращаемое значение:
//   ПеречислениеСсылка.ТипыНалогов
//
Функция ТипНалогаПоКБК(Знач КодБК) Экспорт
	
	ТипНалога = ПрочиеНалогиИСборы;
	Если НЕ ПлатежиВБюджетКлиентСервер.КБКЗадан(КодБК) Тогда
		Возврат ТипНалога;
	КонецЕсли;
	
	ШаблонСравнения = ШаблонСравненияКБК(КодБК);
	Для Каждого Элемент Из Перечисления.ТипыНалогов Цикл
		Если ШаблонСравнения = ШаблонСравненияКБК(КБКПоТипуНалога(Элемент)) Тогда
			ТипНалога = Элемент;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТипНалога;
	
КонецФункции

//-- Локализация

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//++ Локализация

Функция КБКПоТипуНалога(ТипНалога)
	
	КодБК = "";
	Если ТипНалога = ЕдиныйНалоговыйПлатеж Тогда
		КодБК = "18201061201010000510";	// ЕдиныйНалоговыйПлатеж
	
	
	КонецЕсли;
	
	Возврат КодБК;
	
КонецФункции


Функция ШаблонСравненияКБК(КБК)
	
	ГраницыАдминистратораКБК  = ПлатежиВБюджетКлиентСервер.РасположениеЭлементаКБК("КодГлавногоАдминистратора");
	ГраницыПеременнойЧастиКБК = ПлатежиВБюджетКлиентСервер.РасположениеЭлементаКБК("КодПодвидаДоходов");
	ШаблонКБК = СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", ГраницыАдминистратораКБК.Длина)
		+ Сред(КБК, ГраницыАдминистратораКБК.Начало + ГраницыАдминистратораКБК.Длина);
	ШаблонКБК = Лев(ШаблонКБК, ГраницыПеременнойЧастиКБК.Начало - 1)
		+ СтроковыеФункцииКлиентСервер.СформироватьСтрокуСимволов("_", ГраницыПеременнойЧастиКБК.Длина)
		+ Сред(ШаблонКБК, ГраницыПеременнойЧастиКБК.Начало + ГраницыПеременнойЧастиКБК.Длина);
	
	Возврат ШаблонКБК;
	
КонецФункции

//-- Локализация

#КонецОбласти

#КонецЕсли