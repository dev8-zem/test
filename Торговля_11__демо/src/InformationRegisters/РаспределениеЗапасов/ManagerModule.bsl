#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Склад)";
	
	Ограничение.ТекстДляВнешнихПользователей = Ограничение.Текст;

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

// Добавляет в список процедуры-обработчики обновления данных ИБ
// для всех поддерживаемых версий библиотеки или конфигурации.
// Вызывается перед началом обновления данных ИБ для построения плана обновления.
//
//  Обработчики - См. ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления
//
// Пример добавления процедуры-обработчика в список:
//  Обработчик = Обработчики.Добавить();
//  Обработчик.Версия              = "1.1.0.0";
//  Обработчик.Процедура           = "ОбновлениеИБ.ПерейтиНаВерсию_1_1_0_0";
//  Обработчик.МонопольныйРежим    = Ложь;
//
// Параметры:
// 	Обработчики - см. ОбновлениеИнформационнойБазы.НоваяТаблицаОбработчиковОбновления
//
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "РегистрыСведений.РаспределениеЗапасов.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.Версия = "11.5.12.52";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("d05af858-ca38-4f1b-a9fc-ae8050472af0");
	Обработчик.Многопоточный = Истина;
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыСведений.РаспределениеЗапасов.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru = 'Заполняет движения по необособленным работам и график поступления по динамическим этапам производства'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.РегистрыСведений.РаспределениеЗапасов.ПолноеИмя());
	Читаемые.Добавить(Метаданные.РегистрыНакопления.РаспределениеЗапасовДвижения.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.РегистрыСведений.РаспределениеЗапасов.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Обработчик.ПриоритетыВыполнения = ОбновлениеИнформационнойБазы.ПриоритетыВыполненияОбработчика();
	
	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "РегистрыНакопления.РаспределениеЗапасовДвижения.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	НоваяСтрока.Порядок = "После";
	
	НоваяСтрока = Обработчик.ПриоритетыВыполнения.Добавить();
	НоваяСтрока.Процедура = "РегистрыСведений.РаспределениеЗапасов.ЗаполнитьПолеИзлишек";
	НоваяСтрока.Порядок = "После";
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Процедура = "РегистрыСведений.РаспределениеЗапасов.ЗаполнитьПолеИзлишек";
	Обработчик.Версия = "11.5.12.35";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("48ab33e7-b5ee-431c-8678-1c4b33c1c2e2");
	Обработчик.Многопоточный = Истина;
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыСведений.РаспределениеЗапасов.ЗарегистрироватьДанныеКОбработкеДляЗаполненияПоляИзлишек";
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.Комментарий = НСтр("ru = 'Заполняет дополнительное поле ""Излишек""'");
	
	Читаемые = Новый Массив;
	Читаемые.Добавить(Метаданные.РегистрыСведений.РаспределениеЗапасов.ПолноеИмя());
	Обработчик.ЧитаемыеОбъекты = СтрСоединить(Читаемые, ",");
	
	Изменяемые = Новый Массив;
	Изменяемые.Добавить(Метаданные.РегистрыСведений.РаспределениеЗапасов.ПолноеИмя());
	Обработчик.ИзменяемыеОбъекты = СтрСоединить(Изменяемые, ",");
	
	Обработчик.ПриоритетыВыполнения = ОбновлениеИнформационнойБазы.ПриоритетыВыполненияОбработчика();	
	
КонецПроцедуры

Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.ПолныеИменаРегистров = "РегистрСведений.РаспределениеЗапасов";
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиИзмеренияНезависимогоРегистраСведений();
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.Вставить("ЭтоНезависимыйРегистрСведений", Истина);
	ДополнительныеПараметры.Вставить("ПолноеИмяРегистра", "РегистрСведений.РаспределениеЗапасов");
	
	#Область РасхожденияДвиженийРегистраРаспределениеЗапасовДвиженияСДокументами
	
	СтроковыеПредставленияТиповРегистраторов = РегистрыНакопления.РаспределениеЗапасовДвижения.ТипыРегистраторовДляПерепроведенияВОбработчикеОбновления();
		ТекстыИтоговые = Новый Массив();
		Для Каждого ПолноеИмяДокумента Из СтроковыеПредставленияТиповРегистраторов Цикл
			ТекстЗапросаДокумента = РаспределениеЗапасовДвижения.ТекстыЗапросовПроведенияДокументов(
				ПолноеИмяДокумента,
				"РаспределениеЗапасовДвижения");
			ТекстыИтоговые.Добавить(ТекстЗапросаДокумента);
		КонецЦикла;
		ВложенныйЗапрос = СтрСоединить(ТекстыИтоговые, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
		
		ТекстГруппировки =
			"ВЫБРАТЬ
			|	Набор.Регистратор                     КАК Регистратор,
			|	Набор.Период                          КАК Период,
			|	Набор.Номенклатура                    КАК Номенклатура,
			|	Набор.Характеристика                  КАК Характеристика,
			|	Набор.Склад                           КАК Склад,
			|	Набор.Назначение                      КАК Назначение,
			|	Набор.ЗаказНаОтгрузку                 КАК ЗаказНаОтгрузку,
			|	Набор.ЖелаемаяДатаОтгрузки            КАК ЖелаемаяДатаОтгрузки,
			|	Набор.ЗаказНаПоступление              КАК ЗаказНаПоступление,
			|	Набор.ДатаПоступления                 КАК ДатаПоступления,
			|	СУММА(Набор.Отгрузить)                КАК Отгрузить,
			|	СУММА(Набор.Резервировать)            КАК Резервировать,
			|	СУММА(Набор.РезервироватьПоМереПоступления) КАК РезервироватьПоМереПоступления,
			|	СУММА(Набор.КОбеспечению)             КАК КОбеспечению,
			|	СУММА(Набор.НеОбеспечивать)           КАК НеОбеспечивать,
			|	СУММА(Набор.Поступило)                КАК Поступило,
			|	СУММА(Набор.ПоступитКДате)            КАК ПоступитКДате,
			|	СУММА(Набор.ПоставкаНаСогласовании)   КАК ПоставкаНаСогласовании,
			|	СУММА(Набор.ЗакрытьГрафикПоступления) КАК ЗакрытьГрафикПоступления
			|ИЗ(
			|	ВЫБРАТЬ
			|		Таблица.Регистратор              КАК Регистратор,
			|		Таблица.Период                   КАК Период,
			|		Таблица.Номенклатура             КАК Номенклатура,
			|		Таблица.Характеристика           КАК Характеристика,
			|		Таблица.Склад                    КАК Склад,
			|		Таблица.Назначение               КАК Назначение,
			|		Таблица.ЗаказНаОтгрузку          КАК ЗаказНаОтгрузку,
			|		Таблица.ЖелаемаяДатаОтгрузки     КАК ЖелаемаяДатаОтгрузки,
			|		Таблица.ЗаказНаПоступление       КАК ЗаказНаПоступление,
			|		Таблица.ДатаПоступления          КАК ДатаПоступления,
			|		Таблица.Отгрузить                КАК Отгрузить,
			|		Таблица.Резервировать            КАК Резервировать,
			|		Таблица.РезервироватьПоМереПоступления КАК РезервироватьПоМереПоступления,
			|		Таблица.КОбеспечениюБезРезерва   КАК КОбеспечению,
			|		Таблица.НеОбеспечивать           КАК НеОбеспечивать,
			|		Таблица.Поступило                КАК Поступило,
			|		Таблица.ПоступитКДате            КАК ПоступитКДате,
			|		Таблица.ПоставкаНаСогласовании   КАК ПоставкаНаСогласовании,
			|		Таблица.ЗакрытьГрафикПоступления КАК ЗакрытьГрафикПоступления
			|	ИЗ
			|		&ВложенныйЗапрос КАК Таблица
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		Таблица.Регистратор               КАК Регистратор,
			|		Таблица.Период                    КАК Период,
			|		Таблица.Номенклатура              КАК Номенклатура,
			|		Таблица.Характеристика            КАК Характеристика,
			|		Таблица.Склад                     КАК Склад,
			|		Таблица.Назначение                КАК Назначение,
			|		Таблица.ЗаказНаОтгрузку           КАК ЗаказНаОтгрузку,
			|		Таблица.ЖелаемаяДатаОтгрузки      КАК ЖелаемаяДатаОтгрузки,
			|		Таблица.ЗаказНаПоступление        КАК ЗаказНаПоступление,
			|		Таблица.ДатаПоступления           КАК ДатаПоступления,
			|		-Таблица.Отгрузить                КАК Отгрузить,
			|		-Таблица.Резервировать            КАК Резервировать,
			|		-Таблица.РезервироватьПоМереПоступления КАК РезервироватьПоМереПоступления,
			|		-Таблица.КОбеспечениюБезРезерва   КАК КОбеспечению,
			|		-Таблица.НеОбеспечивать           КАК НеОбеспечивать,
			|		-Таблица.Поступило                КАК Поступило,
			|		-Таблица.ПоступитКДате            КАК ПоступитКДате,
			|		-Таблица.ПоставкаНаСогласовании   КАК ПоставкаНаСогласовании,
			|		-Таблица.ЗакрытьГрафикПоступления КАК ЗакрытьГрафикПоступления
			|	ИЗ
			|		РегистрНакопления.РаспределениеЗапасовДвижения КАК Таблица
			|	ГДЕ
			|		НЕ Таблица.Регистратор ССЫЛКА Документ.КорректировкаРегистров
			|			И ТИПЗНАЧЕНИЯ(Таблица.Регистратор) В(&ТипыРегистраторов)) КАК Набор
			|СГРУППИРОВАТЬ ПО
			|	Набор.Регистратор,
			|	Набор.Период,
			|	Набор.Номенклатура,
			|	Набор.Характеристика,
			|	Набор.Склад,
			|	Набор.Назначение,
			|	Набор.ЗаказНаОтгрузку,
			|	Набор.ЖелаемаяДатаОтгрузки,
			|	Набор.ЗаказНаПоступление,
			|	Набор.ДатаПоступления
			|ИМЕЮЩИЕ
			|	СУММА(Набор.Отгрузить) <> 0
			|		ИЛИ СУММА(Набор.Резервировать) <> 0
			|		ИЛИ СУММА(Набор.РезервироватьПоМереПоступления) <> 0
			|		ИЛИ СУММА(Набор.КОбеспечению) <> 0
			|		ИЛИ СУММА(Набор.НеОбеспечивать) <> 0
			|		ИЛИ СУММА(Набор.Поступило) <> 0
			|		ИЛИ СУММА(Набор.ПоступитКДате) <> 0
			|		ИЛИ СУММА(Набор.ПоставкаНаСогласовании) <> 0
			|		ИЛИ СУММА(Набор.ЗакрытьГрафикПоступления) <> 0";
			
		ТекстГруппировки = СтрЗаменить(ТекстГруппировки, "&ВложенныйЗапрос", СтрШаблон("(%1)", ВложенныйЗапрос));
		ТекстГруппировки = СтрШаблон("(%1)", ТекстГруппировки);
		
		ТекстЗапроса = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	Набор.Номенклатура   КАК Номенклатура,
			|	Набор.Характеристика КАК Характеристика,
			|	Набор.Склад          КАК Склад,
			|	Набор.Назначение     КАК Назначение
			|ИЗ(
			|	ВЫБРАТЬ
			|		Набор.Номенклатура   КАК Номенклатура,
			|		Набор.Характеристика КАК Характеристика,
			|		Набор.Склад          КАК Склад,
			|		Набор.Назначение     КАК Назначение
			|	ИЗ
			|		ТекстГруппировки КАК Набор
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		Набор.Номенклатура                           КАК Номенклатура,
			|		Набор.Характеристика                         КАК Характеристика,
			|		Набор.Склад                                  КАК Склад,
			|		ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение
			|	ИЗ
			|		ТекстГруппировки КАК Набор) КАК Набор";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТекстГруппировки", ТекстГруппировки);
		Тексты = Новый Массив();
		ТекстТоварныеМеста = РегистрыНакопления.РаспределениеЗапасовДвижения.ТекстТоварныеМеста(Ложь);
		Тексты.Добавить(ТекстТоварныеМеста);
		Тексты.Добавить(ТекстЗапроса);
		ТекстЗапроса = СтрСоединить(Тексты, ОбщегоНазначения.РазделительПакетаЗапросов());
		ТипыРегистраторов = Новый Массив();
		Для Каждого Элемент Из СтроковыеПредставленияТиповРегистраторов Цикл
			ТипыРегистраторов.Добавить(ТипЗнч(Документы[Сред(Элемент, СтрНайти(Элемент, ".") + 1)].ПустаяСсылка()));
		КонецЦикла;
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("ТипыРегистраторов", ТипыРегистраторов);
		ЗначенияПараметров = РаспределениеЗапасовДвижения.ЗначенияПараметровДляТекстовЗапросовПроведенияДокументов();
		Для Каждого Элемент Из ЗначенияПараметров Цикл
			Запрос.УстановитьПараметр(Элемент.Ключ, Элемент.Значение);
		КонецЦикла;
		
		РезультатЗапроса = Запрос.Выполнить();
		ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, РезультатЗапроса.Выгрузить(), ДополнительныеПараметры);
	
	#КонецОбласти
	
	#Область РасхожденияСРегистромДвижений
	
	Тексты = Новый Массив();
	Если РаспределениеЗапасов.ЭтоПроизводительныйРежим() Тогда
		
		Текст =
			"ВЫБРАТЬ
			|	ОстаткиПоДвижениям.Номенклатура КАК Номенклатура,
			|	ОстаткиПоДвижениям.Характеристика КАК Характеристика,
			|	ОстаткиПоДвижениям.Склад КАК Склад,
			|	ОстаткиПоДвижениям.Назначение КАК Назначение,
			|	ОстаткиПоДвижениям.Заказ КАК Заказ,
			|	ОстаткиПоДвижениям.ДатаСобытия КАК ДатаСобытия,
			|	ОстаткиПоДвижениям.ВНаличииОстаток КАК ВНаличии,
			|	ОстаткиПоДвижениям.ПоступитОстаток КАК Поступит,
			|	ОстаткиПоДвижениям.ЗаказаноОстаток КАК Заказано,
			|	ОстаткиПоДвижениям.РезервироватьНаСкладеОстаток КАК РезервироватьНаСкладе,
			|	ОстаткиПоДвижениям.РезервироватьПоМереПоступленияОстаток КАК РезервироватьПоМереПоступления,
			|	ОстаткиПоДвижениям.ОтложитьРезервированиеОстаток КАК ОтложитьРезервирование,
			|	ОстаткиПоДвижениям.КОбеспечениюОстаток КАК КОбеспечению,
			|	ОстаткиПоДвижениям.НеОбеспечиватьОстаток КАК НеОбеспечивать
			|ПОМЕСТИТЬ ОстаткиПоДвижениям
			|ИЗ
			|	РегистрНакопления.ЗапасыИПотребности.Остатки КАК ОстаткиПоДвижениям
			|ГДЕ
			|	ОстаткиПоДвижениям.ВНаличииОстаток <> 0
			|		ИЛИ ОстаткиПоДвижениям.ПоступитОстаток <> 0
			|		ИЛИ ОстаткиПоДвижениям.ЗаказаноОстаток <> 0
			|		ИЛИ ОстаткиПоДвижениям.РезервироватьНаСкладеОстаток <> 0
			|		ИЛИ ОстаткиПоДвижениям.РезервироватьПоМереПоступленияОстаток <> 0
			|		ИЛИ ОстаткиПоДвижениям.ОтложитьРезервированиеОстаток <> 0
			|		ИЛИ ОстаткиПоДвижениям.КОбеспечениюОстаток <> 0
			|		ИЛИ ОстаткиПоДвижениям.НеОбеспечиватьОстаток <> 0
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура, Характеристика, Склад, Назначение, Заказ, ДатаСобытия
			|;
			|
			|/////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	Набор.Номенклатура КАК Номенклатура,
			|	Набор.Характеристика КАК Характеристика,
			|	Набор.Склад КАК Склад,
			|	Набор.Назначение КАК Назначение
			|ИЗ(
			|	ВЫБРАТЬ
			|		Движения.Номенклатура КАК Номенклатура,
			|		Движения.Характеристика КАК Характеристика,
			|		Движения.Склад КАК Склад,
			|		Движения.Назначение КАК Назначение
			|	ИЗ
			|		ОстаткиПоДвижениям КАК Движения
			|		
			|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаспределениеЗапасов КАК Сведения
			|			ПО Сведения.Номенклатура = Движения.Номенклатура
			|			 И Сведения.Характеристика = Движения.Характеристика
			|			 И Сведения.Склад = Движения.Склад
			|			 И Сведения.Назначение = Движения.Назначение
			|			 И (
							// Расхождения запаса на складе.
			|				Движения.ВНаличии <> 0
			|						И Движения.Заказ = НЕОПРЕДЕЛЕНО
			|						И Движения.ДатаСобытия = ДАТАВРЕМЯ(1, 1, 1)
			|						И Сведения.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе)
			|						И Сведения.ЗаказНаОтгрузку = НЕОПРЕДЕЛЕНО
			|						И Сведения.ЖелаемаяДатаОтгрузки = ДАТАВРЕМЯ(1, 1, 1)
			|						И Сведения.ЗаказНаПоступление = НЕОПРЕДЕЛЕНО
			|						И Сведения.ДатаПоступления = ДАТАВРЕМЯ(1, 1, 1)
			|						И Сведения.Запас = Движения.ВНаличии
								// Расхождения ожидаемых поступлений.
			|					ИЛИ Движения.Поступит <> 0
			|						И Движения.Заказ <> НЕОПРЕДЕЛЕНО
			|						И Движения.ДатаСобытия <> ДАТАВРЕМЯ(1, 1, 1)
			|						И Сведения.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОжидаемоеПоступление)
			|						И Сведения.ЗаказНаОтгрузку = НЕОПРЕДЕЛЕНО
			|						И Сведения.ЖелаемаяДатаОтгрузки = ДАТАВРЕМЯ(1, 1, 1)
			|						И Сведения.ЗаказНаПоступление = Движения.Заказ
			|						И Сведения.ДатаПоступления = Движения.ДатаСобытия
			|						И Сведения.Запас = Движения.Поступит
								// Расхождения запланированных поступлений.
			|					ИЛИ Движения.Заказано <> 0 И Движения.Заказано - Движения.Поступит > 0
			|						И Движения.Заказ <> НЕОПРЕДЕЛЕНО
			|						И Движения.ДатаСобытия = ДАТАВРЕМЯ(1, 1, 1)
			|						И Сведения.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ПоступлениеНеподтвержденное)
			|						И Сведения.ЗаказНаОтгрузку = НЕОПРЕДЕЛЕНО
			|						И Сведения.ЖелаемаяДатаОтгрузки = ДАТАВРЕМЯ(1, 1, 1)
			|						И Сведения.ЗаказНаПоступление = Движения.Заказ
			|						И Сведения.ДатаПоступления = Движения.ДатаСобытия
			|						И Сведения.Запас = Движения.Заказано - Движения.Поступит
								// Расхождения ожидаемых отгрузок.
			|					ИЛИ (Движения.РезервироватьНаСкладе <> 0
			|							ИЛИ Движения.РезервироватьПоМереПоступления <> 0
			|							ИЛИ Движения.ОтложитьРезервирование <> 0
			|							ИЛИ Движения.КОбеспечению <> 0
			|							ИЛИ Движения.НеОбеспечивать <> 0)
			|						И Движения.Заказ <> НЕОПРЕДЕЛЕНО
			|						И Сведения.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОжидаемаяОтгрузка)
			|						И Сведения.ЗаказНаОтгрузку = Движения.Заказ
			|						И Сведения.ЖелаемаяДатаОтгрузки = Движения.ДатаСобытия
			|						И Сведения.ЗаказНаПоступление = НЕОПРЕДЕЛЕНО
			|						И Сведения.ДатаПоступления = ДАТАВРЕМЯ(1, 1, 1)
			|						И Сведения.Резервировать = Движения.РезервироватьНаСкладе
			|						И Сведения.РезервироватьПоМереПоступления = Движения.РезервироватьПоМереПоступления
			|						И Сведения.ОтложитьРезервирование = Движения.ОтложитьРезервирование
			|						И Сведения.КОбеспечениюБезРезерва = Движения.КОбеспечению
			|						И Сведения.НеОбеспечивать = Движения.НеОбеспечивать)
			|	ГДЕ
			|		(Движения.ВНаличии <> 0
			|					И Движения.Заказ = НЕОПРЕДЕЛЕНО
			|					И Движения.ДатаСобытия = ДАТАВРЕМЯ(1, 1, 1)
			|				ИЛИ Движения.Поступит <> 0
			|					И Движения.Заказ <> НЕОПРЕДЕЛЕНО
			|					И Движения.ДатаСобытия <> ДАТАВРЕМЯ(1, 1, 1)
			|				ИЛИ Движения.Заказано <> 0 И Движения.Заказано - Движения.Поступит > 0
			|					И Движения.Заказ <> НЕОПРЕДЕЛЕНО
			|					И Движения.ДатаСобытия = ДАТАВРЕМЯ(1, 1, 1)
			|				ИЛИ (Движения.РезервироватьНаСкладе <> 0
			|						ИЛИ Движения.РезервироватьПоМереПоступления <> 0
			|						ИЛИ Движения.ОтложитьРезервирование <> 0
			|						ИЛИ Движения.КОбеспечению <> 0
			|						ИЛИ Движения.НеОбеспечивать <> 0)
			|					И Движения.Заказ <> НЕОПРЕДЕЛЕНО)
			|				И Сведения.Номенклатура ЕСТЬ NULL
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		Сведения.Номенклатура КАК Номенклатура,
			|		Сведения.Характеристика КАК Характеристика,
			|		Сведения.Склад КАК Склад,
			|		Сведения.Назначение КАК Назначение
			|	ИЗ
			|		РегистрСведений.РаспределениеЗапасов КАК Сведения
			|			
			|			ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПоДвижениям КАК Движения
			|			ПО Движения.Номенклатура = Сведения.Номенклатура
			|			 И Движения.Характеристика = Сведения.Характеристика
			|			 И Движения.Склад = Сведения.Склад
			|			 И Движения.Назначение = Сведения.Назначение
			|			 И (
							// Расхождения запаса на складе.
			|				Сведения.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе)
			|					И Сведения.Запас <> 0
			|					И Движения.Заказ = НЕОПРЕДЕЛЕНО
			|					И Движения.ДатаСобытия = ДАТАВРЕМЯ(1, 1, 1)
			|					И Движения.ВНаличии = Сведения.Запас
								// Расхождения ожидаемых поступлений.
			|					ИЛИ Сведения.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОжидаемоеПоступление)
			|						И Сведения.Запас <> 0
			|						И Движения.Заказ = Сведения.ЗаказНаПоступление
			|						И Движения.ДатаСобытия = Сведения.ДатаПоступления
			|						И Движения.Поступит = Сведения.Запас
								// Расхождения запланированных поступлений.
			|					ИЛИ Сведения.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ПоступлениеНеподтвержденное)
			|						И Сведения.Запас <> 0
			|						И Движения.Заказ = Сведения.ЗаказНаПоступление
			|						И Движения.ДатаСобытия = Сведения.ДатаПоступления
			|						И Движения.Заказано <> 0 И Движения.Заказано - Движения.Поступит = Сведения.Запас
								// Расхождения ожидаемых отгрузок.
			|					ИЛИ Сведения.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОжидаемаяОтгрузка)
			|						И Движения.Заказ = Сведения.ЗаказНаОтгрузку
			|						И Движения.ДатаСобытия = Сведения.ЖелаемаяДатаОтгрузки
			|						И Движения.РезервироватьНаСкладе = Сведения.Резервировать
			|						И Движения.РезервироватьПоМереПоступления = Сведения.РезервироватьПоМереПоступления
			|						И Движения.ОтложитьРезервирование = Сведения.ОтложитьРезервирование
			|						И Движения.КОбеспечению = Сведения.КОбеспечениюБезРезерва
			|						И Движения.НеОбеспечивать = Сведения.НеОбеспечивать)
			|	ГДЕ
			|		(Сведения.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе)
			|					И Сведения.Запас <> 0
			|				ИЛИ Сведения.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОжидаемоеПоступление)
			|					И Сведения.Запас <> 0
			|				ИЛИ Сведения.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ПоступлениеНеподтвержденное)
			|					И Сведения.Запас <> 0
			|				ИЛИ Сведения.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОжидаемаяОтгрузка))
			|			И Движения.Номенклатура ЕСТЬ NULL) КАК Набор";
			
	Иначе
		
		Текст =
			"ВЫБРАТЬ
			|	ОстаткиПоДвижениям.Номенклатура КАК Номенклатура,
			|	ОстаткиПоДвижениям.Характеристика КАК Характеристика,
			|	ОстаткиПоДвижениям.Склад КАК Склад,
			|	ОстаткиПоДвижениям.Назначение КАК Назначение,
			|	ВЫБОР
			|		КОГДА ОстаткиПоДвижениям.Отгрузить = 0
			|			ТОГДА ОстаткиПоДвижениям.ЗаказНаОтгрузку
			|		ИНАЧЕ НЕОПРЕДЕЛЕНО
			|	КОНЕЦ КАК ЗаказНаОтгрузку,
			|	ВЫБОР
			|		КОГДА ОстаткиПоДвижениям.Отгрузить = 0
			|			ТОГДА ОстаткиПоДвижениям.ЖелаемаяДатаОтгрузки
			|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
			|	КОНЕЦ КАК ЖелаемаяДатаОтгрузки,
			|	ОстаткиПоДвижениям.ЗаказНаПоступление КАК ЗаказНаПоступление,
			|	СУММА(ОстаткиПоДвижениям.Поступило) - СУММА(ОстаткиПоДвижениям.Отгрузить) КАК ВНаличии,
			|	СУММА(ОстаткиПоДвижениям.Резервировать) КАК Резервировать,
			|	СУММА(ОстаткиПоДвижениям.РезервироватьПоМереПоступления) КАК РезервироватьПоМереПоступления,
			|	СУММА(ОстаткиПоДвижениям.КОбеспечениюБезРезерва) КАК КОбеспечениюБезРезерва,
			|	ВЫБОР
			|		КОГДА СУММА(ОстаткиПоДвижениям.ПоставкаНаСогласовании
			|				+ ОстаткиПоДвижениям.ПоступитКДате
			|				- ОстаткиПоДвижениям.ЗакрытьГрафикПоступления) > 0
			|			ТОГДА СУММА(ОстаткиПоДвижениям.ПоставкаНаСогласовании
			|					+ ОстаткиПоДвижениям.ПоступитКДате
			|					- ОстаткиПоДвижениям.ЗакрытьГрафикПоступления)
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК ПоступитКДате,
			|	ВЫБОР
			|		КОГДА СУММА(ОстаткиПоДвижениям.НеОбеспечивать
			|				- ОстаткиПоДвижениям.ЗакрытьГрафикОтгрузки) > 0
			|			ТОГДА СУММА(ОстаткиПоДвижениям.НеОбеспечивать
			|					- ОстаткиПоДвижениям.ЗакрытьГрафикОтгрузки)
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК НеОбеспечивать
			|ПОМЕСТИТЬ ОстаткиПоДвижениям
			|ИЗ
			|	РегистрНакопления.РаспределениеЗапасовДвижения КАК ОстаткиПоДвижениям
			|ГДЕ
			|	ОстаткиПоДвижениям.Активность
			|СГРУППИРОВАТЬ ПО
			|	ОстаткиПоДвижениям.Номенклатура,
			|	ОстаткиПоДвижениям.Характеристика,
			|	ОстаткиПоДвижениям.Склад,
			|	ОстаткиПоДвижениям.Назначение,
			|	ВЫБОР
			|		КОГДА ОстаткиПоДвижениям.Отгрузить = 0
			|			ТОГДА ОстаткиПоДвижениям.ЗаказНаОтгрузку
			|		ИНАЧЕ НЕОПРЕДЕЛЕНО
			|	КОНЕЦ,
			|	ВЫБОР
			|		КОГДА ОстаткиПоДвижениям.Отгрузить = 0
			|			ТОГДА ОстаткиПоДвижениям.ЖелаемаяДатаОтгрузки
			|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
			|	КОНЕЦ,
			|	ОстаткиПоДвижениям.ЗаказНаПоступление
			|ИМЕЮЩИЕ
			|	СУММА(ОстаткиПоДвижениям.Поступило) - СУММА(ОстаткиПоДвижениям.Отгрузить) <> 0
			|		ИЛИ СУММА(ОстаткиПоДвижениям.Резервировать) <> 0
			|		ИЛИ СУММА(ОстаткиПоДвижениям.РезервироватьПоМереПоступления) <> 0
			|		ИЛИ СУММА(ОстаткиПоДвижениям.КОбеспечениюБезРезерва) <> 0
			|		ИЛИ ВЫБОР
			|				КОГДА СУММА(ОстаткиПоДвижениям.ПоставкаНаСогласовании
			|						+ ОстаткиПоДвижениям.ПоступитКДате
			|						- ОстаткиПоДвижениям.ЗакрытьГрафикПоступления) > 0
			|					ТОГДА СУММА(ОстаткиПоДвижениям.ПоставкаНаСогласовании
			|							+ ОстаткиПоДвижениям.ПоступитКДате
			|							- ОстаткиПоДвижениям.ЗакрытьГрафикПоступления)
			|				ИНАЧЕ 0
			|			КОНЕЦ <> 0
			|		ИЛИ ВЫБОР
			|				КОГДА СУММА(ОстаткиПоДвижениям.НеОбеспечивать
			|						- ОстаткиПоДвижениям.ЗакрытьГрафикОтгрузки) > 0
			|					ТОГДА СУММА(ОстаткиПоДвижениям.НеОбеспечивать
			|							- ОстаткиПоДвижениям.ЗакрытьГрафикОтгрузки)
			|				ИНАЧЕ 0
			|			КОНЕЦ <> 0
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура, Характеристика, Склад, Назначение, ЗаказНаОтгрузку, ЖелаемаяДатаОтгрузки, ЗаказНаПоступление
			|;
			|
			|/////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Сведения.Номенклатура КАК Номенклатура,
			|	Сведения.Характеристика КАК Характеристика,
			|	Сведения.Склад КАК Склад,
			|	Сведения.Назначение КАК Назначение,
			|	Сведения.ЗаказНаПоступление КАК ЗаказНаПоступление,
			|	СУММА(Сведения.Запас) КАК Запас
			|ПОМЕСТИТЬ ОжидаемыеПоступления
			|ИЗ
			|	РегистрСведений.РаспределениеЗапасов КАК Сведения
			|ГДЕ
			|	Сведения.Состояние В(
			|		ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОжидаемоеПоступление),
			|		ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ПоступлениеНеподтвержденное))
			|СГРУППИРОВАТЬ ПО
			|	Сведения.Номенклатура,
			|	Сведения.Характеристика,
			|	Сведения.Склад,
			|	Сведения.Назначение,
			|	Сведения.ЗаказНаПоступление
			|ИМЕЮЩИЕ
			|	СУММА(Сведения.Запас) <> 0
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура, Характеристика, Склад, Назначение, ЗаказНаПоступление
			|;
			|
			|/////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	Набор.Номенклатура КАК Номенклатура,
			|	Набор.Характеристика КАК Характеристика,
			|	Набор.Склад КАК Склад,
			|	Набор.Назначение КАК Назначение
			|ИЗ(
			|	ВЫБРАТЬ
			|		Движения.Номенклатура КАК Номенклатура,
			|		Движения.Характеристика КАК Характеристика,
			|		Движения.Склад КАК Склад,
			|		Движения.Назначение КАК Назначение
			|	ИЗ
			|		ОстаткиПоДвижениям КАК Движения
			|			
						// Расхождения запланированных или ожидаемых поступлений.
			|			ЛЕВОЕ СОЕДИНЕНИЕ ОжидаемыеПоступления КАК ОжидаемыеПоступления
			|			ПО ОжидаемыеПоступления.Номенклатура = Движения.Номенклатура
			|			 И ОжидаемыеПоступления.Характеристика = Движения.Характеристика
			|			 И ОжидаемыеПоступления.Склад = Движения.Склад
			|			 И ОжидаемыеПоступления.Назначение = Движения.Назначение
			|			 И Движения.ПоступитКДате <> 0
			|			 И Движения.ЗаказНаПоступление <> НЕОПРЕДЕЛЕНО
			|			 И Движения.ЗаказНаОтгрузку = НЕОПРЕДЕЛЕНО
			|			 И Движения.ЖелаемаяДатаОтгрузки = ДАТАВРЕМЯ(1, 1, 1)
			|			 И ОжидаемыеПоступления.ЗаказНаПоступление = Движения.ЗаказНаПоступление
			|			 И ОжидаемыеПоступления.Запас = Движения.ПоступитКДате
			|			
			|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаспределениеЗапасов КАК Сведения
			|			ПО Сведения.Номенклатура = Движения.Номенклатура
			|			 И Сведения.Характеристика = Движения.Характеристика
			|			 И Сведения.Склад = Движения.Склад
			|			 И Сведения.Назначение = Движения.Назначение
			|			 И (
							// Расхождения запаса на складе.
			|				Движения.ВНаличии <> 0
			|						И Движения.ЗаказНаОтгрузку = НЕОПРЕДЕЛЕНО
			|						И Движения.ЖелаемаяДатаОтгрузки = ДАТАВРЕМЯ(1, 1, 1)
			|						И Движения.ЗаказНаПоступление = НЕОПРЕДЕЛЕНО
			|						И Сведения.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе)
			|						И Сведения.ЗаказНаОтгрузку = НЕОПРЕДЕЛЕНО
			|						И Сведения.ЖелаемаяДатаОтгрузки = ДАТАВРЕМЯ(1, 1, 1)
			|						И Сведения.ЗаказНаПоступление = НЕОПРЕДЕЛЕНО
			|						И Сведения.ДатаПоступления = ДАТАВРЕМЯ(1, 1, 1)
			|						И Сведения.Запас = Движения.ВНаличии
								// Расхождения ожидаемых отгрузок.
			|					ИЛИ (Движения.Резервировать <> 0
			|							ИЛИ Движения.РезервироватьПоМереПоступления <> 0
			|							ИЛИ Движения.КОбеспечениюБезРезерва <> 0
			|							ИЛИ Движения.НеОбеспечивать <> 0)
			|						И Движения.ЗаказНаОтгрузку <> НЕОПРЕДЕЛЕНО
			|						И Движения.ЗаказНаПоступление = НЕОПРЕДЕЛЕНО
			|						И Сведения.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОжидаемаяОтгрузка)
			|						И Сведения.ЗаказНаОтгрузку = Движения.ЗаказНаОтгрузку
			|						И Сведения.ЖелаемаяДатаОтгрузки = Движения.ЖелаемаяДатаОтгрузки
			|						И Сведения.ЗаказНаПоступление = НЕОПРЕДЕЛЕНО
			|						И Сведения.ДатаПоступления = ДАТАВРЕМЯ(1, 1, 1)
			|						И Сведения.Резервировать = Движения.Резервировать
			|						И Сведения.РезервироватьПоМереПоступления + Сведения.ОтложитьРезервирование = Движения.РезервироватьПоМереПоступления
			|						И Сведения.КОбеспечениюБезРезерва = Движения.КОбеспечениюБезРезерва
			|						И Сведения.НеОбеспечивать = Движения.НеОбеспечивать)
			|	ГДЕ
			|		(Движения.ПоступитКДате <> 0
			|				И Движения.ЗаказНаПоступление <> НЕОПРЕДЕЛЕНО
			|				И Движения.ЗаказНаОтгрузку = НЕОПРЕДЕЛЕНО
			|				И Движения.ЖелаемаяДатаОтгрузки = ДАТАВРЕМЯ(1, 1, 1)
			|			ИЛИ Движения.ВНаличии <> 0
			|				И Движения.ЗаказНаОтгрузку = НЕОПРЕДЕЛЕНО
			|				И Движения.ЖелаемаяДатаОтгрузки = ДАТАВРЕМЯ(1, 1, 1)
			|				И Движения.ЗаказНаПоступление = НЕОПРЕДЕЛЕНО
			|			ИЛИ (Движения.Резервировать <> 0
			|					ИЛИ Движения.РезервироватьПоМереПоступления <> 0
			|					ИЛИ Движения.КОбеспечениюБезРезерва <> 0
			|					ИЛИ Движения.НеОбеспечивать <> 0)
			|				И Движения.ЗаказНаОтгрузку <> НЕОПРЕДЕЛЕНО
			|				И Движения.ЗаказНаПоступление = НЕОПРЕДЕЛЕНО)
			|			И Сведения.Номенклатура ЕСТЬ NULL
			|			И ОжидаемыеПоступления.Номенклатура ЕСТЬ NULL
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		Сведения.Номенклатура КАК Номенклатура,
			|		Сведения.Характеристика КАК Характеристика,
			|		Сведения.Склад КАК Склад,
			|		Сведения.Назначение КАК Назначение
			|	ИЗ
			|		РегистрСведений.РаспределениеЗапасов КАК Сведения
			|			
			|			ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПоДвижениям КАК Движения
			|			ПО Движения.Номенклатура = Сведения.Номенклатура
			|			 И Движения.Характеристика = Сведения.Характеристика
			|			 И Движения.Склад = Сведения.Склад
			|			 И Движения.Назначение = Сведения.Назначение
			|			 И (
							// Расхождения запаса на складе.
			|				Сведения.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе)
			|					И Сведения.Запас <> 0
			|					И Движения.ЗаказНаПоступление = НЕОПРЕДЕЛЕНО
			|					И Движения.ЗаказНаОтгрузку = НЕОПРЕДЕЛЕНО
			|					И Движения.ЖелаемаяДатаОтгрузки = ДАТАВРЕМЯ(1, 1, 1)
			|					И Движения.ВНаличии = Сведения.Запас
								// Расхождения ожидаемых отгрузок.
			|					ИЛИ Сведения.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОжидаемаяОтгрузка)
			|						И Движения.ЗаказНаОтгрузку = Сведения.ЗаказНаОтгрузку
			|						И Движения.ЖелаемаяДатаОтгрузки = Сведения.ЖелаемаяДатаОтгрузки
			|						И Движения.ЗаказНаПоступление = НЕОПРЕДЕЛЕНО
			|						И Движения.Резервировать = Сведения.Резервировать
			|						И Движения.РезервироватьПоМереПоступления = Сведения.РезервироватьПоМереПоступления + Сведения.ОтложитьРезервирование
			|						И Движения.КОбеспечениюБезРезерва = Сведения.КОбеспечениюБезРезерва
			|						И Движения.НеОбеспечивать = Сведения.НеОбеспечивать)
			|	ГДЕ
			|		(Сведения.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе)
			|					И Сведения.Запас <> 0
			|				ИЛИ Сведения.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОжидаемаяОтгрузка))
			|			И Движения.Номенклатура ЕСТЬ NULL
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		Сведения.Номенклатура КАК Номенклатура,
			|		Сведения.Характеристика КАК Характеристика,
			|		Сведения.Склад КАК Склад,
			|		Сведения.Назначение КАК Назначение
			|	ИЗ
			|		ОжидаемыеПоступления КАК Сведения
			|			
			|			ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиПоДвижениям КАК Движения
			|			ПО Движения.Номенклатура = Сведения.Номенклатура
			|			 И Движения.Характеристика = Сведения.Характеристика
			|			 И Движения.Склад = Сведения.Склад
			|			 И Движения.Назначение = Сведения.Назначение
						// Расхождения в запланированных или ожидаемых поступлениях.
			|			 И Движения.ЗаказНаПоступление = Сведения.ЗаказНаПоступление
			|			 И Движения.ПоступитКДате = Сведения.Запас
			|	ГДЕ
			|		Движения.Номенклатура ЕСТЬ NULL
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
				// Неверные остатки в наличии по номенклатуре в целом.
			|	ВЫБРАТЬ
			|		Остатки.Номенклатура КАК Номенклатура,
			|		Остатки.Характеристика КАК Характеристика,
			|		Остатки.Склад КАК Склад,
			|		ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение
			|	ИЗ(
			|		ВЫБРАТЬ
			|			Движения.Номенклатура КАК Номенклатура,
			|			Движения.Характеристика КАК Характеристика,
			|			Движения.Склад КАК Склад,
			|			Движения.ВНаличии КАК ВНаличии
			|		ИЗ
			|			ОстаткиПоДвижениям КАК Движения
			|		
			|		ОБЪЕДИНИТЬ ВСЕ
			|		
			|		ВЫБРАТЬ
			|			Сведения.Номенклатура КАК Номенклатура,
			|			Сведения.Характеристика КАК Характеристика,
			|			Сведения.Склад КАК Склад,
			|			-Сведения.ВНаличии КАК ВНаличии
			|		ИЗ
			|			РегистрСведений.РаспределениеЗапасов КАК Сведения
			|		ГДЕ
			|			Сведения.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе)
			|				 И Сведения.Назначение = ЗНАЧЕНИЕ(справочник.Назначения.ПустаяСсылка)) КАК Остатки
			|	СГРУППИРОВАТЬ ПО
			|		Остатки.Номенклатура,
			|		Остатки.Характеристика,
			|		Остатки.Склад
			|	ИМЕЮЩИЕ
			|		СУММА(Остатки.ВНаличии) <> 0) КАК Набор";
			
	КонецЕсли;
	
	Запрос = Новый Запрос(Текст);
	РегистрируемыеИзмерения = Запрос.Выполнить().Выгрузить();
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, РегистрируемыеИзмерения, ДополнительныеПараметры);
	#КонецОбласти
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрСведений.РаспределениеЗапасов";
	
	Если Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра) Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	
	Если Не ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Неопределено, "РегистрНакопления.РаспределениеЗапасовДвижения") Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	ТаблицаОбновляемыеДанные = ОбновлениеИнформационнойБазы.ДанныеДляОбновленияВМногопоточномОбработчике(Параметры);
	Для Каждого Строка Из ТаблицаОбновляемыеДанные Цикл
		
		Набор = Неопределено;
		
		НачатьТранзакцию();
		Попытка
			Блокировка = Новый БлокировкаДанных();
			ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РаспределениеЗапасовДвижения");
			ЭлементБлокировки.УстановитьЗначение("Номенклатура", Строка.Номенклатура);
			ЭлементБлокировки.УстановитьЗначение("Характеристика", Строка.Характеристика);
			ЭлементБлокировки.УстановитьЗначение("Склад", Строка.Склад);
			Если ЗначениеЗаполнено(Строка.Назначение) Тогда
				ЭлементБлокировки.УстановитьЗначение("Назначение", Строка.Назначение);
			КонецЕсли;
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			
			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.РаспределениеЗапасов");
			ЭлементБлокировки.УстановитьЗначение("Номенклатура", Строка.Номенклатура);
			ЭлементБлокировки.УстановитьЗначение("Характеристика", Строка.Характеристика);
			ЭлементБлокировки.УстановитьЗначение("Склад", Строка.Склад);
			ЭлементБлокировки.УстановитьЗначение("Назначение", Строка.Назначение);
			
			Блокировка.Заблокировать();
			
			Набор = РаспределениеЗапасов.ОбновлениеИБПоТовару(Строка);
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(Набор);
			ЗафиксироватьТранзакцию();
			
		Исключение
			ОтменитьТранзакцию();
			Если Набор = Неопределено Тогда
				Набор = СоздатьНаборЗаписей();
				Набор.Отбор.Номенклатура.Установить(Строка.Номенклатура);
				Набор.Отбор.Характеристика.Установить(Строка.Характеристика);
				Набор.Отбор.Склад.Установить(Строка.Склад);
				Набор.Отбор.Назначение.Установить(Строка.Назначение);
			КонецЕсли;
			ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(ИнформацияОбОшибке(), Набор);
		КонецПопытки;
		
	КонецЦикла;
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра);
	
КонецПроцедуры

Процедура ЗарегистрироватьДанныеКОбработкеДляЗаполненияПоляИзлишек(Параметры) Экспорт
	
	ПараметрыВыборки = Параметры.ПараметрыВыборки;
	ПараметрыВыборки.ПолныеИменаРегистров = "РегистрСведений.РаспределениеЗапасов";
	ПараметрыВыборки.СпособВыборки = ОбновлениеИнформационнойБазы.СпособВыборкиИзмеренияНезависимогоРегистраСведений();
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.Вставить("ЭтоНезависимыйРегистрСведений", Истина);
	ДополнительныеПараметры.Вставить("ПолноеИмяРегистра", "РегистрСведений.РаспределениеЗапасов");
	
	Запрос = Новый Запрос();
	Запрос.Текст =
		// Товары и обособленные работы, расчет поля излишек.
		"ВЫБРАТЬ
		|	Сведения.Номенклатура КАК Номенклатура,
		|	Сведения.Характеристика КАК Характеристика,
		|	Сведения.Склад КАК Склад,
		|	Сведения.Назначение КАК Назначение
		|ИЗ
		|	РегистрСведений.РаспределениеЗапасов КАК Сведения
		|ГДЕ
		|	Сведения.Состояние В(
		|		ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе),
		|		ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОжидаемоеПоступление),
		|		ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ПоступлениеНеПодтвержденное),
		|		ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОжидаемаяОтгрузка))
		|СГРУППИРОВАТЬ ПО
		|	Сведения.Номенклатура,
		|	Сведения.Характеристика,
		|	Сведения.Склад,
		|	Сведения.Назначение
		|ИМЕЮЩИЕ
		|	СУММА(ВЫБОР
		|			КОГДА Сведения.Свободно < 0
		|				ТОГДА
		|					0
		|			ИНАЧЕ Сведения.Свободно
		|		КОНЕЦ) > 0
		|		И СУММА(ВЫБОР
		|					КОГДА Сведения.Излишек < 0
		|						ТОГДА
		|							0
		|					ИНАЧЕ Сведения.Излишек
		|			КОНЕЦ) = 0
		|		И СУММА(ВЫБОР
		|					КОГДА Сведения.Свободно < 0
		|						ТОГДА
		|							0
		|					ИНАЧЕ Сведения.Свободно
		|			КОНЕЦ) > СУММА(Сведения.КОбеспечениюБезРезерва + Сведения.ОтложитьРезервирование)
		|		ИЛИ СУММА(ВЫБОР
		|					КОГДА Сведения.Свободно < 0
		|						ТОГДА
		|							Сведения.Свободно
		|					ИНАЧЕ 0
		|				КОНЕЦ) <> СУММА(ВЫБОР
		|									КОГДА Сведения.Излишек < 0
		|										ТОГДА
		|											Сведения.Излишек
		|									ИНАЧЕ 0
		|								КОНЕЦ)
		|
		|ОБЪЕДИНИТЬ
		|
		// Неверные остатки в наличии по номенклатуре в целом.
		|ВЫБРАТЬ
		|	Сведения.Номенклатура КАК Номенклатура,
		|	Сведения.Характеристика КАК Характеристика,
		|	Сведения.Склад КАК Склад,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение
		|ИЗ
		|	РегистрСведений.РаспределениеЗапасов КАК Сведения
		|ГДЕ
		|	Сведения.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе)
		|СГРУППИРОВАТЬ ПО
		|	Сведения.Номенклатура,
		|	Сведения.Характеристика,
		|	Сведения.Склад
		|ИМЕЮЩИЕ
		|	МАКСИМУМ(Сведения.ВНаличии) <> СУММА(Сведения.Запас)";
		
	РегистрируемыеИзмерения = Запрос.Выполнить().Выгрузить();
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, РегистрируемыеИзмерения, ДополнительныеПараметры);
	
КонецПроцедуры

Процедура ЗаполнитьПолеИзлишек(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрСведений.РаспределениеЗапасов";
	
	Если Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра) Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	
	ТаблицаОбновляемыеДанные = ОбновлениеИнформационнойБазы.ДанныеДляОбновленияВМногопоточномОбработчике(Параметры);
	Для Каждого Строка Из ТаблицаОбновляемыеДанные Цикл
		
		Набор = Неопределено;
		РассчитыватьРесурсВНаличии = ЗначениеЗаполнено(Строка.Назначение);
		НачатьТранзакцию();
		Попытка
			Блокировка = Новый БлокировкаДанных();
			
			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.РаспределениеЗапасов");
			ЭлементБлокировки.УстановитьЗначение("Номенклатура", Строка.Номенклатура);
			ЭлементБлокировки.УстановитьЗначение("Характеристика", Строка.Характеристика);
			ЭлементБлокировки.УстановитьЗначение("Склад", Строка.Склад);
			Если Не РассчитыватьРесурсВНаличии Тогда
				ЭлементБлокировки.УстановитьЗначение("Назначение", Строка.Назначение);
			КонецЕсли;
			
			Блокировка.Заблокировать();
			
			Набор = СоздатьНаборЗаписей();
			Набор.Отбор.Номенклатура.Установить(Строка.Номенклатура);
			Набор.Отбор.Характеристика.Установить(Строка.Характеристика);
			Набор.Отбор.Склад.Установить(Строка.Склад);
			Набор.Отбор.Назначение.Установить(Строка.Назначение);
			ЗаполнитьНаборРассчитатьИзлишек(Набор, Строка);
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(Набор);
			ЗафиксироватьТранзакцию();
			
		Исключение
			ОтменитьТранзакцию();
			Если Набор = Неопределено Тогда
				Набор = СоздатьНаборЗаписей();
				Набор.Отбор.Номенклатура.Установить(Строка.Номенклатура);
				Набор.Отбор.Характеристика.Установить(Строка.Характеристика);
				Набор.Отбор.Склад.Установить(Строка.Склад);
				Набор.Отбор.Назначение.Установить(Строка.Назначение);
			КонецЕсли;
			ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(ИнформацияОбОшибке(), Набор);
		КонецПопытки;
		
	КонецЦикла;
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра);
	
КонецПроцедуры

Процедура ЗаполнитьНаборРассчитатьИзлишек(Набор, Строка)
	
	Текст =
		"ВЫБРАТЬ
		|	Остатки.Номенклатура КАК Номенклатура,
		|	Остатки.Характеристика КАК Характеристика,
		|	Остатки.Склад КАК Склад,
		|	СУММА(Остатки.Запас) КАК ВНаличии
		|ПОМЕСТИТЬ ОстатокВНаличии
		|ИЗ
		|	РегистрСведений.РаспределениеЗапасов КАК Остатки
		|ГДЕ
		|	Остатки.Номенклатура = &Номенклатура
		|		И Остатки.Характеристика = &Характеристика
		|		И Остатки.Склад = &Склад
		|		И &Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|		И Остатки.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе)
		|СГРУППИРОВАТЬ ПО
		|	Остатки.Номенклатура,
		|	Остатки.Характеристика,
		|	Остатки.Склад
		|ИМЕЮЩИЕ
		|	МАКСИМУМ(Остатки.ВНаличии) <> СУММА(Остатки.Запас)
		|;
		|
		|///////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ОжидаемаяОтгрузка.ОтложитьРезервирование + ОжидаемаяОтгрузка.КОбеспечениюБезРезерва) КАК Количество
		|ПОМЕСТИТЬ Потребности
		|ИЗ
		|	РегистрСведений.РаспределениеЗапасов КАК ОжидаемаяОтгрузка
		|ГДЕ
		|	ОжидаемаяОтгрузка.Номенклатура = &Номенклатура
		|		И ОжидаемаяОтгрузка.Характеристика = &Характеристика
		|		И ОжидаемаяОтгрузка.Склад = &Склад
		|		И ОжидаемаяОтгрузка.Назначение = &Назначение
		|		И ОжидаемаяОтгрузка.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОжидаемаяОтгрузка)
		|		И (ОжидаемаяОтгрузка.ОтложитьРезервирование > 0
		|			Или ОжидаемаяОтгрузка.КОбеспечениюБезРезерва > 0)
		|;
		|
		|/////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Остатки.Номенклатура КАК Номенклатура,
		|	Остатки.Характеристика КАК Характеристика,
		|	Остатки.Склад КАК Склад,
		|	Остатки.Назначение КАК Назначение,
		|	Остатки.Состояние КАК Состояние,
		|	Остатки.ЗаказНаОтгрузку КАК ЗаказНаОтгрузку,
		|	Остатки.ЖелаемаяДатаОтгрузки КАК ЖелаемаяДатаОтгрузки,
		|	Остатки.ЗаказНаПоступление КАК ЗаказНаПоступление,
		|	Остатки.ДатаПоступления КАК ДатаПоступления,
		|	Остатки.ТипЗаписиРаспределенияЗапасов КАК ТипЗаписиРаспределенияЗапасов,
		|	Остатки.РезервироватьПоМереПоступления КАК РезервироватьПоМереПоступления,
		|	Остатки.КОбеспечениюБезРезерва КАК КОбеспечениюБезРезерва,
		|	Остатки.ОтложитьРезервирование КАК ОтложитьРезервирование,
		|	Остатки.Резервировать КАК Резервировать,
		|	Остатки.НеОбеспечивать КАК НеОбеспечивать,
		|	Остатки.Зарезервировано КАК Зарезервировано,
		|	Остатки.Обеспечено КАК Обеспечено,
		|	Остатки.РезервПревышаетОстатки КАК РезервПревышаетОстатки,
		|	Остатки.НеОбеспечено КАК НеОбеспечено,
		|	Остатки.Запас КАК Запас,
		|	Остатки.Резерв КАК Резерв,
		|	Остатки.Свободно КАК Свободно,
		|	Остатки.Излишек КАК Излишек,
		|	ЕСТЬNULL(ОстатокВНаличии.ВНаличии, Остатки.ВНаличии) КАК ВНаличии,
		|	Остатки.РезервироватьПоМереПоступленияИтогНаДату КАК РезервироватьПоМереПоступленияИтогНаДату,
		|	Остатки.НеОбеспеченоКОбеспечению КАК НеОбеспеченоКОбеспечению,
		|	ВЫБОР
		|		КОГДА Остатки.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе)
		|			ТОГДА
		|				1
		|		КОГДА Остатки.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОжидаемоеПоступление)
		|			ТОГДА
		|				2
		|		КОГДА Остатки.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ПоступлениеНеподтвержденное)
		|			ТОГДА
		|				3
		|	КОНЕЦ КАК Порядок,
		|	ЕСТЬNULL(Потребности.Количество, 0) КАК Количество
		|ИЗ
		|	РегистрСведений.РаспределениеЗапасов КАК Остатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Потребности КАК Потребности
		|		ПО ИСТИНА
		|		ЛЕВОЕ СОЕДИНЕНИЕ ОстатокВНаличии КАК ОстатокВНаличии
		|		ПО ОстатокВНаличии.Номенклатура = Остатки.Номенклатура
		|		 И ОстатокВНаличии.Характеристика = Остатки.Характеристика
		|		 И ОстатокВНаличии.Склад = Остатки.Склад
		|		 И Остатки.Состояние = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе)
		|		 И Остатки.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|		
		|ГДЕ
		|	Остатки.Номенклатура = &Номенклатура
		|		И Остатки.Характеристика = &Характеристика
		|		И Остатки.Склад = &Склад
		|		И Остатки.Назначение = &Назначение
		|		И Остатки.Состояние В(
		|			ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе),
		|			ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОжидаемоеПоступление),
		|			ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ПоступлениеНеподтвержденное))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РаспределениеЗапасов.Номенклатура КАК Номенклатура,
		|	РаспределениеЗапасов.Характеристика КАК Характеристика,
		|	РаспределениеЗапасов.Склад КАК Склад,
		|	РаспределениеЗапасов.Назначение КАК Назначение,
		|	РаспределениеЗапасов.Состояние КАК Состояние,
		|	РаспределениеЗапасов.ЗаказНаОтгрузку КАК ЗаказНаОтгрузку,
		|	РаспределениеЗапасов.ЖелаемаяДатаОтгрузки КАК ЖелаемаяДатаОтгрузки,
		|	РаспределениеЗапасов.ЗаказНаПоступление КАК ЗаказНаПоступление,
		|	РаспределениеЗапасов.ДатаПоступления КАК ДатаПоступления,
		|	РаспределениеЗапасов.ТипЗаписиРаспределенияЗапасов КАК ТипЗаписиРаспределенияЗапасов,
		|	РаспределениеЗапасов.РезервироватьПоМереПоступления КАК РезервироватьПоМереПоступления,
		|	РаспределениеЗапасов.КОбеспечениюБезРезерва КАК КОбеспечениюБезРезерва,
		|	РаспределениеЗапасов.ОтложитьРезервирование КАК ОтложитьРезервирование,
		|	РаспределениеЗапасов.Резервировать КАК Резервировать,
		|	РаспределениеЗапасов.НеОбеспечивать КАК НеОбеспечивать,
		|	РаспределениеЗапасов.Зарезервировано КАК Зарезервировано,
		|	РаспределениеЗапасов.Обеспечено КАК Обеспечено,
		|	РаспределениеЗапасов.РезервПревышаетОстатки КАК РезервПревышаетОстатки,
		|	РаспределениеЗапасов.НеОбеспечено КАК НеОбеспечено,
		|	РаспределениеЗапасов.Запас КАК Запас,
		|	РаспределениеЗапасов.Резерв КАК Резерв,
		|	РаспределениеЗапасов.Свободно КАК Свободно,
		|	РаспределениеЗапасов.Излишек КАК Излишек,
		|	РаспределениеЗапасов.ВНаличии КАК ВНаличии,
		|	РаспределениеЗапасов.РезервироватьПоМереПоступленияИтогНаДату КАК РезервироватьПоМереПоступленияИтогНаДату,
		|	РаспределениеЗапасов.НеОбеспеченоКОбеспечению КАК НеОбеспеченоКОбеспечению,
		|	4 КАК Порядок,
		|	0 КАК Количество
		|ИЗ
		|	РегистрСведений.РаспределениеЗапасов КАК РаспределениеЗапасов
		|ГДЕ
		|	РаспределениеЗапасов.Номенклатура = &Номенклатура
		|		И РаспределениеЗапасов.Характеристика = &Характеристика
		|		И РаспределениеЗапасов.Склад = &Склад
		|		И РаспределениеЗапасов.Назначение = &Назначение
		|		И НЕ РаспределениеЗапасов.Состояние В(
		|			ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе),
		|			ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОжидаемоеПоступление),
		|			ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ПоступлениеНеподтвержденное))
		|УПОРЯДОЧИТЬ ПО
		|	Порядок, ДатаПоступления, ЗаказНаПоступление";
	Запрос = Новый Запрос(Текст);
	Запрос.УстановитьПараметр("Номенклатура", Строка.Номенклатура);
	Запрос.УстановитьПараметр("Характеристика", Строка.Характеристика);
	Запрос.УстановитьПараметр("Склад", Строка.Склад);
	Запрос.УстановитьПараметр("Назначение", Строка.Назначение);
	Таблица = Запрос.Выполнить().Выгрузить();
	
	ВсегоСтрок = Таблица.Количество();
	Количество = 0;
	Если ВсегоСтрок > 0 Тогда
		Количество = Таблица[0].Количество;
	КонецЕсли;
	
	Для Индекс = 0 По ВсегоСтрок - 1 Цикл
		
		СтрокаТаблицы = Таблица[Индекс];
		КоличествоРаспределить = Мин(Количество, Макс(СтрокаТаблицы.Свободно, 0));
		СтрокаТаблицы.Излишек = СтрокаТаблицы.Свободно - КоличествоРаспределить;
		Количество = Количество - КоличествоРаспределить;
		Если СтрокаТаблицы.Порядок > 3 Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	Набор.Загрузить(Таблица);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
